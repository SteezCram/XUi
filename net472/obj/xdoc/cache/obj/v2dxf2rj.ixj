id: XUi
language: CSharp
name:
  Default: XUi
qualifiedName:
  Default: XUi
type: Assembly
modifiers: {}
items:
- id: XUi
  commentId: N:XUi
  language: CSharp
  name:
    CSharp: XUi
    VB: XUi
  nameWithType:
    CSharp: XUi
    VB: XUi
  qualifiedName:
    CSharp: XUi
    VB: XUi
  type: Namespace
  assemblies:
  - XUi
  modifiers: {}
  items:
  - id: XUi.XUiTheme
    commentId: T:XUi.XUiTheme
    language: CSharp
    name:
      CSharp: XUiTheme
      VB: XUiTheme
    nameWithType:
      CSharp: XUiTheme
      VB: XUiTheme
    qualifiedName:
      CSharp: XUi.XUiTheme
      VB: XUi.XUiTheme
    type: Class
    assemblies:
    - XUi
    namespace: XUi
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/XUiTheme.cs
      id: XUiTheme
      path: ../XUi/XUiTheme.cs
      startLine: 12
    summary: "\nXUiTheme of the application\n"
    example: []
    syntax:
      content:
        CSharp: public static class XUiTheme
        VB: Public Module XUiTheme
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: XUi.XUiTheme.XUiDictionaries
      commentId: F:XUi.XUiTheme.XUiDictionaries
      language: CSharp
      name:
        CSharp: XUiDictionaries
        VB: XUiDictionaries
      nameWithType:
        CSharp: XUiTheme.XUiDictionaries
        VB: XUiTheme.XUiDictionaries
      qualifiedName:
        CSharp: XUi.XUiTheme.XUiDictionaries
        VB: XUi.XUiTheme.XUiDictionaries
      type: Field
      assemblies:
      - XUi
      namespace: XUi
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/XUiTheme.cs
        id: XUiDictionaries
        path: ../XUi/XUiTheme.cs
        startLine: 17
      summary: "\nDictionary of the <xref href=\"XUi.XUiTheme\" data-throw-if-not-resolved=\"false\"></xref>, contain all the resources\n"
      example: []
      syntax:
        content:
          CSharp: public static ResourceDictionary XUiDictionaries
          VB: Public Shared XUiDictionaries As ResourceDictionary
        return:
          type: System.Windows.ResourceDictionary
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.XUiTheme: 
    - id: XUi.XUiTheme.Initialize
      commentId: M:XUi.XUiTheme.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: XUiTheme.Initialize()
        VB: XUiTheme.Initialize()
      qualifiedName:
        CSharp: XUi.XUiTheme.Initialize()
        VB: XUi.XUiTheme.Initialize()
      type: Method
      assemblies:
      - XUi
      namespace: XUi
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/XUiTheme.cs
        id: Initialize
        path: ../XUi/XUiTheme.cs
        startLine: 22
      summary: "\nInitialize the <xref href=\"XUi.XUiTheme.XUiDictionaries\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static void Initialize()
          VB: Public Shared Sub Initialize
      overload: XUi.XUiTheme.Initialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.XUiTheme.XUiDictionaries: 
    - id: XUi.XUiTheme.EnableDarkMode
      commentId: M:XUi.XUiTheme.EnableDarkMode
      language: CSharp
      name:
        CSharp: EnableDarkMode()
        VB: EnableDarkMode()
      nameWithType:
        CSharp: XUiTheme.EnableDarkMode()
        VB: XUiTheme.EnableDarkMode()
      qualifiedName:
        CSharp: XUi.XUiTheme.EnableDarkMode()
        VB: XUi.XUiTheme.EnableDarkMode()
      type: Method
      assemblies:
      - XUi
      namespace: XUi
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/XUiTheme.cs
        id: EnableDarkMode
        path: ../XUi/XUiTheme.cs
        startLine: 35
      summary: "\nChange all the colors to the black mode\n"
      example: []
      syntax:
        content:
          CSharp: public static void EnableDarkMode()
          VB: Public Shared Sub EnableDarkMode
      overload: XUi.XUiTheme.EnableDarkMode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: XUi.XUiTheme.EnableLightMode
      commentId: M:XUi.XUiTheme.EnableLightMode
      language: CSharp
      name:
        CSharp: EnableLightMode()
        VB: EnableLightMode()
      nameWithType:
        CSharp: XUiTheme.EnableLightMode()
        VB: XUiTheme.EnableLightMode()
      qualifiedName:
        CSharp: XUi.XUiTheme.EnableLightMode()
        VB: XUi.XUiTheme.EnableLightMode()
      type: Method
      assemblies:
      - XUi
      namespace: XUi
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/XUiTheme.cs
        id: EnableLightMode
        path: ../XUi/XUiTheme.cs
        startLine: 59
      summary: "\nChange all the colors to the light mode\n"
      example: []
      syntax:
        content:
          CSharp: public static void EnableLightMode()
          VB: Public Shared Sub EnableLightMode
      overload: XUi.XUiTheme.EnableLightMode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: XUi.Controls
  commentId: N:XUi.Controls
  language: CSharp
  name:
    CSharp: XUi.Controls
    VB: XUi.Controls
  nameWithType:
    CSharp: XUi.Controls
    VB: XUi.Controls
  qualifiedName:
    CSharp: XUi.Controls
    VB: XUi.Controls
  type: Namespace
  assemblies:
  - XUi
  modifiers: {}
  items:
  - id: XUi.Controls.XUiWindow
    commentId: T:XUi.Controls.XUiWindow
    language: CSharp
    name:
      CSharp: XUiWindow
      VB: XUiWindow
    nameWithType:
      CSharp: XUiWindow
      VB: XUiWindow
    qualifiedName:
      CSharp: XUi.Controls.XUiWindow
      VB: XUi.Controls.XUiWindow
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindow.cs
      id: XUiWindow
      path: ../XUi/Controls/XUiWindow.cs
      startLine: 27
    summary: "\nXUiWindow, wrap the <xref href=\"System.Windows.WindowStyle.ThreeDBorderWindow\" data-throw-if-not-resolved=\"false\"></xref> into the XUi style\nSupport <see cref=\"!:Dialogs.Dialog\"></see> from XUi\n"
    remarks: "\nImplement a default DataContext, you can&apos;t put a DataContext on the XUiWindow itself, you must set it to another control\n"
    example: []
    syntax:
      content:
        CSharp: 'public class XUiWindow : Window, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IWindowService'
        VB: >-
          Public Class XUiWindow

              Inherits Window

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IWindowService
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Window
    implements:
    - System.ComponentModel.ISupportInitialize
    extensionMethods:
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.Dialog.IDialog)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowInputDialog(System.String,System.String,System.String)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.Dialog.DialogSettings)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowMessageDialog(System.String,System.String)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.Dialog.DialogSettings)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowProgressDialog(System.String,System.Boolean)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowSelectDialog(System.String,System.String,System.Collections.IEnumerable)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.CloseDialog
    - XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.IsDialogOpen
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.XUiWindow.WindowBarBrush
      commentId: P:XUi.Controls.XUiWindow.WindowBarBrush
      language: CSharp
      name:
        CSharp: WindowBarBrush
        VB: WindowBarBrush
      nameWithType:
        CSharp: XUiWindow.WindowBarBrush
        VB: XUiWindow.WindowBarBrush
      qualifiedName:
        CSharp: XUi.Controls.XUiWindow.WindowBarBrush
        VB: XUi.Controls.XUiWindow.WindowBarBrush
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindow.cs
        id: WindowBarBrush
        path: ../XUi/Controls/XUiWindow.cs
        startLine: 32
      summary: "\nSet the Window top bar brush\n"
      example: []
      syntax:
        content:
          CSharp: public SolidColorBrush WindowBarBrush { get; set; }
          VB: Public Property WindowBarBrush As SolidColorBrush
        parameters: []
        return:
          type: System.Windows.Media.SolidColorBrush
      overload: XUi.Controls.XUiWindow.WindowBarBrush*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.XUiWindow.WindowBarBrushProperty
      commentId: F:XUi.Controls.XUiWindow.WindowBarBrushProperty
      language: CSharp
      name:
        CSharp: WindowBarBrushProperty
        VB: WindowBarBrushProperty
      nameWithType:
        CSharp: XUiWindow.WindowBarBrushProperty
        VB: XUiWindow.WindowBarBrushProperty
      qualifiedName:
        CSharp: XUi.Controls.XUiWindow.WindowBarBrushProperty
        VB: XUi.Controls.XUiWindow.WindowBarBrushProperty
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindow.cs
        id: WindowBarBrushProperty
        path: ../XUi/Controls/XUiWindow.cs
        startLine: 37
      syntax:
        content:
          CSharp: public static readonly DependencyProperty WindowBarBrushProperty
          VB: Public Shared ReadOnly WindowBarBrushProperty As DependencyProperty
        return:
          type: System.Windows.DependencyProperty
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: XUi.Controls.XUiWindow.#ctor
      commentId: M:XUi.Controls.XUiWindow.#ctor
      language: CSharp
      name:
        CSharp: XUiWindow()
        VB: XUiWindow()
      nameWithType:
        CSharp: XUiWindow.XUiWindow()
        VB: XUiWindow.XUiWindow()
      qualifiedName:
        CSharp: XUi.Controls.XUiWindow.XUiWindow()
        VB: XUi.Controls.XUiWindow.XUiWindow()
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindow.cs
        id: .ctor
        path: ../XUi/Controls/XUiWindow.cs
        startLine: 44
      syntax:
        content:
          CSharp: public XUiWindow()
          VB: Public Sub New
      overload: XUi.Controls.XUiWindow.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      System.Windows.WindowStyle.ThreeDBorderWindow: 
  - id: XUi.Controls.XUiWindowTool
    commentId: T:XUi.Controls.XUiWindowTool
    language: CSharp
    name:
      CSharp: XUiWindowTool
      VB: XUiWindowTool
    nameWithType:
      CSharp: XUiWindowTool
      VB: XUiWindowTool
    qualifiedName:
      CSharp: XUi.Controls.XUiWindowTool
      VB: XUi.Controls.XUiWindowTool
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindowTool.cs
      id: XUiWindowTool
      path: ../XUi/Controls/XUiWindowTool.cs
      startLine: 26
    summary: "\nXUiWindowTool, wrap the <xref href=\"System.Windows.WindowStyle.ToolWindow\" data-throw-if-not-resolved=\"false\"></xref> into the XUi style\nDon&apos;t support <see cref=\"!:Dialogs.Dialog\"></see> from XUi\n"
    remarks: "\nImplement a default DataContext, you can&apos;t put a DataContext on the XUiWindow itself, you must set it to another control\n"
    example: []
    syntax:
      content:
        CSharp: 'public class XUiWindowTool : Window, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IWindowService'
        VB: >-
          Public Class XUiWindowTool

              Inherits Window

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IWindowService
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Window
    implements:
    - System.ComponentModel.ISupportInitialize
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.XUiWindowTool.WindowBarBrush
      commentId: P:XUi.Controls.XUiWindowTool.WindowBarBrush
      language: CSharp
      name:
        CSharp: WindowBarBrush
        VB: WindowBarBrush
      nameWithType:
        CSharp: XUiWindowTool.WindowBarBrush
        VB: XUiWindowTool.WindowBarBrush
      qualifiedName:
        CSharp: XUi.Controls.XUiWindowTool.WindowBarBrush
        VB: XUi.Controls.XUiWindowTool.WindowBarBrush
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindowTool.cs
        id: WindowBarBrush
        path: ../XUi/Controls/XUiWindowTool.cs
        startLine: 31
      summary: "\nSet the Window top bar brush\n"
      example: []
      syntax:
        content:
          CSharp: public SolidColorBrush WindowBarBrush { get; set; }
          VB: Public Property WindowBarBrush As SolidColorBrush
        parameters: []
        return:
          type: System.Windows.Media.SolidColorBrush
      overload: XUi.Controls.XUiWindowTool.WindowBarBrush*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.XUiWindowTool.WindowBarBrushProperty
      commentId: F:XUi.Controls.XUiWindowTool.WindowBarBrushProperty
      language: CSharp
      name:
        CSharp: WindowBarBrushProperty
        VB: WindowBarBrushProperty
      nameWithType:
        CSharp: XUiWindowTool.WindowBarBrushProperty
        VB: XUiWindowTool.WindowBarBrushProperty
      qualifiedName:
        CSharp: XUi.Controls.XUiWindowTool.WindowBarBrushProperty
        VB: XUi.Controls.XUiWindowTool.WindowBarBrushProperty
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindowTool.cs
        id: WindowBarBrushProperty
        path: ../XUi/Controls/XUiWindowTool.cs
        startLine: 36
      syntax:
        content:
          CSharp: public static readonly DependencyProperty WindowBarBrushProperty
          VB: Public Shared ReadOnly WindowBarBrushProperty As DependencyProperty
        return:
          type: System.Windows.DependencyProperty
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: XUi.Controls.XUiWindowTool.#ctor
      commentId: M:XUi.Controls.XUiWindowTool.#ctor
      language: CSharp
      name:
        CSharp: XUiWindowTool()
        VB: XUiWindowTool()
      nameWithType:
        CSharp: XUiWindowTool.XUiWindowTool()
        VB: XUiWindowTool.XUiWindowTool()
      qualifiedName:
        CSharp: XUi.Controls.XUiWindowTool.XUiWindowTool()
        VB: XUi.Controls.XUiWindowTool.XUiWindowTool()
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/XUiWindowTool.cs
        id: .ctor
        path: ../XUi/Controls/XUiWindowTool.cs
        startLine: 43
      syntax:
        content:
          CSharp: public XUiWindowTool()
          VB: Public Sub New
      overload: XUi.Controls.XUiWindowTool.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      System.Windows.WindowStyle.ToolWindow: 
- id: XUi.Controls.Dialog
  commentId: N:XUi.Controls.Dialog
  language: CSharp
  name:
    CSharp: XUi.Controls.Dialog
    VB: XUi.Controls.Dialog
  nameWithType:
    CSharp: XUi.Controls.Dialog
    VB: XUi.Controls.Dialog
  qualifiedName:
    CSharp: XUi.Controls.Dialog
    VB: XUi.Controls.Dialog
  type: Namespace
  assemblies:
  - XUi
  modifiers: {}
  items:
  - id: XUi.Controls.Dialog.DialogType
    commentId: T:XUi.Controls.Dialog.DialogType
    language: CSharp
    name:
      CSharp: DialogType
      VB: DialogType
    nameWithType:
      CSharp: DialogType
      VB: DialogType
    qualifiedName:
      CSharp: XUi.Controls.Dialog.DialogType
      VB: XUi.Controls.Dialog.DialogType
    type: Enum
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
      id: DialogType
      path: ../XUi/Controls/Dialog/Dialog.cs
      startLine: 15
    summary: "\nDialog Type\nEach dialog type have a special functionnement and a special method to be show\n"
    example: []
    syntax:
      content:
        CSharp: public enum DialogType
        VB: Public Enum DialogType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: XUi.Controls.Dialog.DialogType.Message
      commentId: F:XUi.Controls.Dialog.DialogType.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: DialogType.Message
        VB: DialogType.Message
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogType.Message
        VB: XUi.Controls.Dialog.DialogType.Message
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Message
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 17
      syntax:
        content:
          CSharp: Message = 0
          VB: Message = 0
        return:
          type: XUi.Controls.Dialog.DialogType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.Controls.Dialog.DialogType.Progress
      commentId: F:XUi.Controls.Dialog.DialogType.Progress
      language: CSharp
      name:
        CSharp: Progress
        VB: Progress
      nameWithType:
        CSharp: DialogType.Progress
        VB: DialogType.Progress
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogType.Progress
        VB: XUi.Controls.Dialog.DialogType.Progress
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Progress
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 18
      syntax:
        content:
          CSharp: Progress = 2
          VB: Progress = 2
        return:
          type: XUi.Controls.Dialog.DialogType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: XUi.Controls.Dialog.MessageResult
    commentId: T:XUi.Controls.Dialog.MessageResult
    language: CSharp
    name:
      CSharp: MessageResult
      VB: MessageResult
    nameWithType:
      CSharp: MessageResult
      VB: MessageResult
    qualifiedName:
      CSharp: XUi.Controls.Dialog.MessageResult
      VB: XUi.Controls.Dialog.MessageResult
    type: Enum
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
      id: MessageResult
      path: ../XUi/Controls/Dialog/Dialog.cs
      startLine: 25
    summary: "\nAll the message result\nCome from a special button\n"
    example: []
    syntax:
      content:
        CSharp: public enum MessageResult
        VB: Public Enum MessageResult
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: XUi.Controls.Dialog.MessageResult.Yes
      commentId: F:XUi.Controls.Dialog.MessageResult.Yes
      language: CSharp
      name:
        CSharp: Yes
        VB: Yes
      nameWithType:
        CSharp: MessageResult.Yes
        VB: MessageResult.Yes
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageResult.Yes
        VB: XUi.Controls.Dialog.MessageResult.Yes
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Yes
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 27
      syntax:
        content:
          CSharp: Yes = 0
          VB: Yes = 0
        return:
          type: XUi.Controls.Dialog.MessageResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.Controls.Dialog.MessageResult.No
      commentId: F:XUi.Controls.Dialog.MessageResult.No
      language: CSharp
      name:
        CSharp: No
        VB: No
      nameWithType:
        CSharp: MessageResult.No
        VB: MessageResult.No
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageResult.No
        VB: XUi.Controls.Dialog.MessageResult.No
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: No
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 28
      syntax:
        content:
          CSharp: No = 2
          VB: No = 2
        return:
          type: XUi.Controls.Dialog.MessageResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.Controls.Dialog.MessageResult.Custom1
      commentId: F:XUi.Controls.Dialog.MessageResult.Custom1
      language: CSharp
      name:
        CSharp: Custom1
        VB: Custom1
      nameWithType:
        CSharp: MessageResult.Custom1
        VB: MessageResult.Custom1
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageResult.Custom1
        VB: XUi.Controls.Dialog.MessageResult.Custom1
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Custom1
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 29
      syntax:
        content:
          CSharp: Custom1 = 4
          VB: Custom1 = 4
        return:
          type: XUi.Controls.Dialog.MessageResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.Controls.Dialog.MessageResult.Custom2
      commentId: F:XUi.Controls.Dialog.MessageResult.Custom2
      language: CSharp
      name:
        CSharp: Custom2
        VB: Custom2
      nameWithType:
        CSharp: MessageResult.Custom2
        VB: MessageResult.Custom2
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageResult.Custom2
        VB: XUi.Controls.Dialog.MessageResult.Custom2
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Custom2
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 30
      syntax:
        content:
          CSharp: Custom2 = 8
          VB: Custom2 = 8
        return:
          type: XUi.Controls.Dialog.MessageResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: XUi.Controls.Dialog.Dialog
    commentId: T:XUi.Controls.Dialog.Dialog
    language: CSharp
    name:
      CSharp: Dialog
      VB: Dialog
    nameWithType:
      CSharp: Dialog
      VB: Dialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.Dialog
      VB: XUi.Controls.Dialog.Dialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
      id: Dialog
      path: ../XUi/Controls/Dialog/Dialog.cs
      startLine: 37
    summary: "\nManage the dialog in XUi\nEach dialog are base on <xref href=\"System.Windows.Controls.UserControl\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: public static class Dialog
        VB: Public Module Dialog
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
      language: CSharp
      name:
        CSharp: ShowCustomDialog(XUiWindow, IDialog)
        VB: ShowCustomDialog(XUiWindow, IDialog)
      nameWithType:
        CSharp: Dialog.ShowCustomDialog(XUiWindow, IDialog)
        VB: Dialog.ShowCustomDialog(XUiWindow, IDialog)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.IDialog)
        VB: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.IDialog)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowCustomDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 56
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.CustomDialog\" data-throw-if-not-resolved=\"false\"></xref>\nThe dialog is defined by the UIElement sended to this method\nCan take any controls\n"
      remarks: "\nUseful to create a dialog with some specific actions\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<IDialog> ShowCustomDialog(this XUiWindow window, IDialog dialog)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowCustomDialog(window As XUiWindow, dialog As IDialog) As Task(Of IDialog)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: dialog
          type: XUi.Controls.Dialog.IDialog
          description: Dialog to load
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.IDialog}
          description: "\n<xref href=\"XUi.Controls.Dialog.CustomDialog\" data-throw-if-not-resolved=\"false\"></xref> to interact with him\n"
      overload: XUi.Controls.Dialog.Dialog.ShowCustomDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.CustomDialog: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: ShowInputDialog(XUiWindow, String, String, String)
        VB: ShowInputDialog(XUiWindow, String, String, String)
      nameWithType:
        CSharp: Dialog.ShowInputDialog(XUiWindow, String, String, String)
        VB: Dialog.ShowInputDialog(XUiWindow, String, String, String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow, System.String, System.String, System.String)
        VB: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow, System.String, System.String, System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowInputDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 76
      summary: "\nShow an <xref href=\"XUi.Controls.Dialog.InputDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<InputDialog> ShowInputDialog(this XUiWindow window, string title, string message, string dataToSet)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowInputDialog(window As XUiWindow, title As String, message As String, dataToSet As String) As Task(Of InputDialog)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: title
          type: System.String
        - id: message
          type: System.String
        - id: dataToSet
          type: System.String
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.InputDialog}
          description: "\n<xref href=\"XUi.Controls.Dialog.ProgressDialog\" data-throw-if-not-resolved=\"false\"></xref> to interact with him\n"
      overload: XUi.Controls.Dialog.Dialog.ShowInputDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.InputDialog: 
        XUi.Controls.Dialog.DialogSettings: 
        XUi.Controls.Dialog.ProgressDialog: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
      language: CSharp
      name:
        CSharp: ShowInputDialog(XUiWindow, DialogSettings)
        VB: ShowInputDialog(XUiWindow, DialogSettings)
      nameWithType:
        CSharp: Dialog.ShowInputDialog(XUiWindow, DialogSettings)
        VB: Dialog.ShowInputDialog(XUiWindow, DialogSettings)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings)
        VB: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowInputDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 100
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<InputDialog> ShowInputDialog(this XUiWindow window, DialogSettings dialogSettings)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowInputDialog(window As XUiWindow, dialogSettings As DialogSettings) As Task(Of InputDialog)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.InputDialog}
          description: "\n<xref href=\"XUi.Controls.Dialog.ProgressDialog\" data-throw-if-not-resolved=\"false\"></xref> to interact with him\n"
      overload: XUi.Controls.Dialog.Dialog.ShowInputDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
        XUi.Controls.Dialog.ProgressDialog: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
      language: CSharp
      name:
        CSharp: ShowMessageDialog(XUiWindow, String, String)
        VB: ShowMessageDialog(XUiWindow, String, String)
      nameWithType:
        CSharp: Dialog.ShowMessageDialog(XUiWindow, String, String)
        VB: Dialog.ShowMessageDialog(XUiWindow, String, String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow, System.String, System.String)
        VB: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow, System.String, System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowMessageDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 124
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<MessageResult> ShowMessageDialog(this XUiWindow window, string title, string message)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowMessageDialog(window As XUiWindow, title As String, message As String) As Task(Of MessageResult)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: title
          type: System.String
          description: Title of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        - id: message
          type: System.String
          description: Message of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
          description: "\nA <xref href=\"XUi.Controls.Dialog.MessageResult\" data-throw-if-not-resolved=\"false\"></xref> which depend of the button clicked by the user\n"
      overload: XUi.Controls.Dialog.Dialog.ShowMessageDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
        XUi.Controls.Dialog.MessageResult: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
      language: CSharp
      name:
        CSharp: ShowMessageDialog(XUiWindow, DialogSettings)
        VB: ShowMessageDialog(XUiWindow, DialogSettings)
      nameWithType:
        CSharp: Dialog.ShowMessageDialog(XUiWindow, DialogSettings)
        VB: Dialog.ShowMessageDialog(XUiWindow, DialogSettings)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings)
        VB: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowMessageDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 146
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<MessageResult> ShowMessageDialog(this XUiWindow window, DialogSettings dialogSettings)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowMessageDialog(window As XUiWindow, dialogSettings As DialogSettings) As Task(Of MessageResult)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
          description: <xref href="XUi.Controls.Dialog.DialogSettings" data-throw-if-not-resolved="false"></xref> of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
          description: "\n<xref href=\"XUi.Controls.Dialog.MessageResult\" data-throw-if-not-resolved=\"false\"></xref> which depend of the button clicked by the user\n"
      overload: XUi.Controls.Dialog.Dialog.ShowMessageDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
        XUi.Controls.Dialog.DialogSettings: 
        XUi.Controls.Dialog.MessageResult: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowProgressDialog(XUiWindow, String, Boolean)
        VB: ShowProgressDialog(XUiWindow, String, Boolean)
      nameWithType:
        CSharp: Dialog.ShowProgressDialog(XUiWindow, String, Boolean)
        VB: Dialog.ShowProgressDialog(XUiWindow, String, Boolean)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow, System.String, System.Boolean)
        VB: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow, System.String, System.Boolean)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowProgressDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 168
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.ProgressDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<ProgressDialog> ShowProgressDialog(this XUiWindow window, string text = "", bool keepAlive = false)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowProgressDialog(window As XUiWindow, text As String = "", keepAlive As Boolean = False) As Task(Of ProgressDialog)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: text
          type: System.String
        - id: keepAlive
          type: System.Boolean
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.ProgressDialog}
          description: "\n<xref href=\"XUi.Controls.Dialog.ProgressDialog\" data-throw-if-not-resolved=\"false\"></xref> to interact with him\n"
      overload: XUi.Controls.Dialog.Dialog.ShowProgressDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.ProgressDialog: 
        XUi.Controls.Dialog.DialogSettings: 
        XUi.Controls.Dialog.MessageDialog: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
      language: CSharp
      name:
        CSharp: ShowSelectDialog(XUiWindow, String, String, IEnumerable)
        VB: ShowSelectDialog(XUiWindow, String, String, IEnumerable)
      nameWithType:
        CSharp: Dialog.ShowSelectDialog(XUiWindow, String, String, IEnumerable)
        VB: Dialog.ShowSelectDialog(XUiWindow, String, String, IEnumerable)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow, System.String, System.String, System.Collections.IEnumerable)
        VB: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow, System.String, System.String, System.Collections.IEnumerable)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowSelectDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 204
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<object> ShowSelectDialog(this XUiWindow window, string title, string message, IEnumerable itemSource)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowSelectDialog(window As XUiWindow, title As String, message As String, itemSource As IEnumerable) As Task(Of Object)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: title
          type: System.String
          description: Title of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        - id: message
          type: System.String
          description: Message of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        - id: itemSource
          type: System.Collections.IEnumerable
        return:
          type: System.Threading.Tasks.Task{System.Object}
          description: "\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> which depend of the seleccted item\n"
      overload: XUi.Controls.Dialog.Dialog.ShowSelectDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
        System.Object: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
      commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
      language: CSharp
      name:
        CSharp: ShowSelectDialog(XUiWindow, DialogSettings, IEnumerable)
        VB: ShowSelectDialog(XUiWindow, DialogSettings, IEnumerable)
      nameWithType:
        CSharp: Dialog.ShowSelectDialog(XUiWindow, DialogSettings, IEnumerable)
        VB: Dialog.ShowSelectDialog(XUiWindow, DialogSettings, IEnumerable)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings, System.Collections.IEnumerable)
        VB: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow, XUi.Controls.Dialog.DialogSettings, System.Collections.IEnumerable)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ShowSelectDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 230
      summary: "\nShow a <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<object> ShowSelectDialog(this XUiWindow window, DialogSettings dialogSettings, IEnumerable itemSource)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ShowSelectDialog(window As XUiWindow, dialogSettings As DialogSettings, itemSource As IEnumerable) As Task(Of Object)
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
          description: <xref href="XUi.Controls.Dialog.DialogSettings" data-throw-if-not-resolved="false"></xref> of the <xref href="XUi.Controls.Dialog.MessageDialog" data-throw-if-not-resolved="false"></xref>
        - id: itemSource
          type: System.Collections.IEnumerable
        return:
          type: System.Threading.Tasks.Task{System.Object}
          description: "\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> which depend of the seleccted item\n"
      overload: XUi.Controls.Dialog.Dialog.ShowSelectDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
        XUi.Controls.Dialog.DialogSettings: 
        System.Object: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
      commentId: M:XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
      language: CSharp
      name:
        CSharp: CloseDialog(XUiWindow)
        VB: CloseDialog(XUiWindow)
      nameWithType:
        CSharp: Dialog.CloseDialog(XUiWindow)
        VB: Dialog.CloseDialog(XUiWindow)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
        VB: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: CloseDialog
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 253
      summary: "\nClose the <xref href=\"XUi.Controls.Dialog.MessageDialog\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static Task CloseDialog(this XUiWindow window)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CloseDialog(window As XUiWindow) As Task
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.Dialog.CloseDialog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.Controls.Dialog.MessageDialog: 
    - isExtensionMethod: true
      id: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
      commentId: M:XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
      language: CSharp
      name:
        CSharp: IsDialogOpen(XUiWindow)
        VB: IsDialogOpen(XUiWindow)
      nameWithType:
        CSharp: Dialog.IsDialogOpen(XUiWindow)
        VB: Dialog.IsDialogOpen(XUiWindow)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
        VB: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: IsDialogOpen
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 264
      summary: "\nCheck if a dialog is already opened\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsDialogOpen(this XUiWindow window)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsDialogOpen(window As XUiWindow) As Boolean
        parameters:
        - id: window
          type: XUi.Controls.XUiWindow
        return:
          type: System.Boolean
      overload: XUi.Controls.Dialog.Dialog.IsDialogOpen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    references:
      System.Windows.Controls.UserControl: 
  - id: XUi.Controls.Dialog.DialogSettings
    commentId: T:XUi.Controls.Dialog.DialogSettings
    language: CSharp
    name:
      CSharp: DialogSettings
      VB: DialogSettings
    nameWithType:
      CSharp: DialogSettings
      VB: DialogSettings
    qualifiedName:
      CSharp: XUi.Controls.Dialog.DialogSettings
      VB: XUi.Controls.Dialog.DialogSettings
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
      id: DialogSettings
      path: ../XUi/Controls/Dialog/Dialog.cs
      startLine: 278
    summary: "\nDialog settings to all the dialog\nContains many settings around all the dialog type\n"
    example: []
    syntax:
      content:
        CSharp: public class DialogSettings
        VB: Public Class DialogSettings
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.DialogSettings.Title
      commentId: F:XUi.Controls.Dialog.DialogSettings.Title
      language: CSharp
      name:
        CSharp: Title
        VB: Title
      nameWithType:
        CSharp: DialogSettings.Title
        VB: DialogSettings.Title
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.Title
        VB: XUi.Controls.Dialog.DialogSettings.Title
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Title
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 289
      syntax:
        content:
          CSharp: public string Title
          VB: Public Title As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.Message
      commentId: F:XUi.Controls.Dialog.DialogSettings.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: DialogSettings.Message
        VB: DialogSettings.Message
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.Message
        VB: XUi.Controls.Dialog.DialogSettings.Message
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Message
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 290
      syntax:
        content:
          CSharp: public string Message
          VB: Public Message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.DataToSet
      commentId: F:XUi.Controls.Dialog.DialogSettings.DataToSet
      language: CSharp
      name:
        CSharp: DataToSet
        VB: DataToSet
      nameWithType:
        CSharp: DialogSettings.DataToSet
        VB: DialogSettings.DataToSet
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.DataToSet
        VB: XUi.Controls.Dialog.DialogSettings.DataToSet
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: DataToSet
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 291
      syntax:
        content:
          CSharp: public string DataToSet
          VB: Public DataToSet As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.IsProtected
      commentId: F:XUi.Controls.Dialog.DialogSettings.IsProtected
      language: CSharp
      name:
        CSharp: IsProtected
        VB: IsProtected
      nameWithType:
        CSharp: DialogSettings.IsProtected
        VB: DialogSettings.IsProtected
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.IsProtected
        VB: XUi.Controls.Dialog.DialogSettings.IsProtected
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: IsProtected
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 292
      syntax:
        content:
          CSharp: public bool IsProtected
          VB: Public IsProtected As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.DefaultButton
      commentId: P:XUi.Controls.Dialog.DialogSettings.DefaultButton
      language: CSharp
      name:
        CSharp: DefaultButton
        VB: DefaultButton
      nameWithType:
        CSharp: DialogSettings.DefaultButton
        VB: DialogSettings.DefaultButton
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.DefaultButton
        VB: XUi.Controls.Dialog.DialogSettings.DefaultButton
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: DefaultButton
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 293
      syntax:
        content:
          CSharp: public string DefaultButton { get; set; }
          VB: Public Property DefaultButton As String
        parameters: []
        return:
          type: System.String
      overload: XUi.Controls.Dialog.DialogSettings.DefaultButton*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.YesText
      commentId: P:XUi.Controls.Dialog.DialogSettings.YesText
      language: CSharp
      name:
        CSharp: YesText
        VB: YesText
      nameWithType:
        CSharp: DialogSettings.YesText
        VB: DialogSettings.YesText
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.YesText
        VB: XUi.Controls.Dialog.DialogSettings.YesText
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: YesText
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 295
      syntax:
        content:
          CSharp: public string YesText { get; set; }
          VB: Public Property YesText As String
        parameters: []
        return:
          type: System.String
      overload: XUi.Controls.Dialog.DialogSettings.YesText*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.NoText
      commentId: P:XUi.Controls.Dialog.DialogSettings.NoText
      language: CSharp
      name:
        CSharp: NoText
        VB: NoText
      nameWithType:
        CSharp: DialogSettings.NoText
        VB: DialogSettings.NoText
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.NoText
        VB: XUi.Controls.Dialog.DialogSettings.NoText
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: NoText
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 296
      syntax:
        content:
          CSharp: public string NoText { get; set; }
          VB: Public Property NoText As String
        parameters: []
        return:
          type: System.String
      overload: XUi.Controls.Dialog.DialogSettings.NoText*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.Custom1Text
      commentId: F:XUi.Controls.Dialog.DialogSettings.Custom1Text
      language: CSharp
      name:
        CSharp: Custom1Text
        VB: Custom1Text
      nameWithType:
        CSharp: DialogSettings.Custom1Text
        VB: DialogSettings.Custom1Text
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.Custom1Text
        VB: XUi.Controls.Dialog.DialogSettings.Custom1Text
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Custom1Text
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 297
      syntax:
        content:
          CSharp: public string Custom1Text
          VB: Public Custom1Text As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.Custom2Text
      commentId: F:XUi.Controls.Dialog.DialogSettings.Custom2Text
      language: CSharp
      name:
        CSharp: Custom2Text
        VB: Custom2Text
      nameWithType:
        CSharp: DialogSettings.Custom2Text
        VB: DialogSettings.Custom2Text
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.Custom2Text
        VB: XUi.Controls.Dialog.DialogSettings.Custom2Text
      type: Field
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: Custom2Text
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 298
      syntax:
        content:
          CSharp: public string Custom2Text
          VB: Public Custom2Text As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.ButtonAlignement
      commentId: P:XUi.Controls.Dialog.DialogSettings.ButtonAlignement
      language: CSharp
      name:
        CSharp: ButtonAlignement
        VB: ButtonAlignement
      nameWithType:
        CSharp: DialogSettings.ButtonAlignement
        VB: DialogSettings.ButtonAlignement
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.ButtonAlignement
        VB: XUi.Controls.Dialog.DialogSettings.ButtonAlignement
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: ButtonAlignement
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 300
      syntax:
        content:
          CSharp: public HorizontalAlignment ButtonAlignement { get; set; }
          VB: Public Property ButtonAlignement As HorizontalAlignment
        parameters: []
        return:
          type: System.Windows.HorizontalAlignment
      overload: XUi.Controls.Dialog.DialogSettings.ButtonAlignement*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.TitleAlignement
      commentId: P:XUi.Controls.Dialog.DialogSettings.TitleAlignement
      language: CSharp
      name:
        CSharp: TitleAlignement
        VB: TitleAlignement
      nameWithType:
        CSharp: DialogSettings.TitleAlignement
        VB: DialogSettings.TitleAlignement
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.TitleAlignement
        VB: XUi.Controls.Dialog.DialogSettings.TitleAlignement
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: TitleAlignement
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 301
      syntax:
        content:
          CSharp: public HorizontalAlignment TitleAlignement { get; set; }
          VB: Public Property TitleAlignement As HorizontalAlignment
        parameters: []
        return:
          type: System.Windows.HorizontalAlignment
      overload: XUi.Controls.Dialog.DialogSettings.TitleAlignement*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: XUi.Controls.Dialog.DialogSettings.MessageAlignement
      commentId: P:XUi.Controls.Dialog.DialogSettings.MessageAlignement
      language: CSharp
      name:
        CSharp: MessageAlignement
        VB: MessageAlignement
      nameWithType:
        CSharp: DialogSettings.MessageAlignement
        VB: DialogSettings.MessageAlignement
      qualifiedName:
        CSharp: XUi.Controls.Dialog.DialogSettings.MessageAlignement
        VB: XUi.Controls.Dialog.DialogSettings.MessageAlignement
      type: Property
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/Dialog.cs
        id: MessageAlignement
        path: ../XUi/Controls/Dialog/Dialog.cs
        startLine: 302
      syntax:
        content:
          CSharp: public HorizontalAlignment MessageAlignement { get; set; }
          VB: Public Property MessageAlignement As HorizontalAlignment
        parameters: []
        return:
          type: System.Windows.HorizontalAlignment
      overload: XUi.Controls.Dialog.DialogSettings.MessageAlignement*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: XUi.Controls.Dialog.CustomDialog
    commentId: T:XUi.Controls.Dialog.CustomDialog
    language: CSharp
    name:
      CSharp: CustomDialog
      VB: CustomDialog
    nameWithType:
      CSharp: CustomDialog
      VB: CustomDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.CustomDialog
      VB: XUi.Controls.Dialog.CustomDialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
      id: CustomDialog
      path: ../XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
      startLine: 21
    summary: "\nLogique d&apos;interaction pour CustomDialog.xaml\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CustomDialog : UserControl, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog'
        VB: >-
          Public Class CustomDialog

              Inherits UserControl

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Controls.UserControl
    implements:
    - System.ComponentModel.ISupportInitialize
    - XUi.Controls.Dialog.IDialog
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.CustomDialog.#ctor(System.Windows.UIElement)
      commentId: M:XUi.Controls.Dialog.CustomDialog.#ctor(System.Windows.UIElement)
      language: CSharp
      name:
        CSharp: CustomDialog(UIElement)
        VB: CustomDialog(UIElement)
      nameWithType:
        CSharp: CustomDialog.CustomDialog(UIElement)
        VB: CustomDialog.CustomDialog(UIElement)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.CustomDialog.CustomDialog(System.Windows.UIElement)
        VB: XUi.Controls.Dialog.CustomDialog.CustomDialog(System.Windows.UIElement)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        startLine: 23
      syntax:
        content:
          CSharp: public CustomDialog(UIElement dialog)
          VB: Public Sub New(dialog As UIElement)
        parameters:
        - id: dialog
          type: System.Windows.UIElement
      overload: XUi.Controls.Dialog.CustomDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.CustomDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.CustomDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: CustomDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: CustomDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.CustomDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.CustomDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        startLine: 39
      summary: "\nMake the initial storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Public Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
          description: ''
        - id: e
          type: System.Windows.RoutedEventArgs
          description: ''
      overload: XUi.Controls.Dialog.CustomDialog.DialogLoaded*
      implements:
      - XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.CustomDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.CustomDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: CustomDialog.ExitAnimation()
        VB: CustomDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.CustomDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.CustomDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        startLine: 58
      summary: "\nMake the exit storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task ExitAnimation()
          VB: Public Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.CustomDialog.ExitAnimation*
      implements:
      - XUi.Controls.Dialog.IDialog.ExitAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.CustomDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.CustomDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: CustomDialog.WaitMessageResult()
        VB: CustomDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.CustomDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.CustomDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/DialogControl/CustomDialog.xaml.cs
        startLine: 71
      syntax:
        content:
          CSharp: public Task<MessageResult> WaitMessageResult()
          VB: Public Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
      overload: XUi.Controls.Dialog.CustomDialog.WaitMessageResult*
      implements:
      - XUi.Controls.Dialog.IDialog.WaitMessageResult
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: XUi.Controls.Dialog.MessageDialog
    commentId: T:XUi.Controls.Dialog.MessageDialog
    language: CSharp
    name:
      CSharp: MessageDialog
      VB: MessageDialog
    nameWithType:
      CSharp: MessageDialog
      VB: MessageDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.MessageDialog
      VB: XUi.Controls.Dialog.MessageDialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
      id: MessageDialog
      path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
      startLine: 21
    summary: "\nLogique d&apos;interaction pour MessageDialog.xaml\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MessageDialog : UserControl, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog'
        VB: >-
          Public Class MessageDialog

              Inherits UserControl

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Controls.UserControl
    implements:
    - System.ComponentModel.ISupportInitialize
    - XUi.Controls.Dialog.IDialog
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.MessageDialog.#ctor(System.String,System.String)
      commentId: M:XUi.Controls.Dialog.MessageDialog.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: MessageDialog(String, String)
        VB: MessageDialog(String, String)
      nameWithType:
        CSharp: MessageDialog.MessageDialog(String, String)
        VB: MessageDialog.MessageDialog(String, String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageDialog.MessageDialog(System.String, System.String)
        VB: XUi.Controls.Dialog.MessageDialog.MessageDialog(System.String, System.String)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        startLine: 25
      syntax:
        content:
          CSharp: public MessageDialog(string title, string message)
          VB: Public Sub New(title As String, message As String)
        parameters:
        - id: title
          type: System.String
        - id: message
          type: System.String
      overload: XUi.Controls.Dialog.MessageDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.MessageDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      commentId: M:XUi.Controls.Dialog.MessageDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      language: CSharp
      name:
        CSharp: MessageDialog(DialogSettings)
        VB: MessageDialog(DialogSettings)
      nameWithType:
        CSharp: MessageDialog.MessageDialog(DialogSettings)
        VB: MessageDialog.MessageDialog(DialogSettings)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageDialog.MessageDialog(XUi.Controls.Dialog.DialogSettings)
        VB: XUi.Controls.Dialog.MessageDialog.MessageDialog(XUi.Controls.Dialog.DialogSettings)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        startLine: 39
      syntax:
        content:
          CSharp: public MessageDialog(DialogSettings dialogSettings)
          VB: Public Sub New(dialogSettings As DialogSettings)
        parameters:
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
      overload: XUi.Controls.Dialog.MessageDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.MessageDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.MessageDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: MessageDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: MessageDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.MessageDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        startLine: 87
      summary: "\nMake the initial storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Public Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
          description: ''
        - id: e
          type: System.Windows.RoutedEventArgs
          description: ''
      overload: XUi.Controls.Dialog.MessageDialog.DialogLoaded*
      implements:
      - XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.MessageDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.MessageDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: MessageDialog.ExitAnimation()
        VB: MessageDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.MessageDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        startLine: 106
      summary: "\nMake the exit storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task ExitAnimation()
          VB: Public Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.MessageDialog.ExitAnimation*
      implements:
      - XUi.Controls.Dialog.IDialog.ExitAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.MessageDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.MessageDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: MessageDialog.WaitMessageResult()
        VB: MessageDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.MessageDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.MessageDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/DialogControl/MessageDialog.xaml.cs
        startLine: 125
      summary: "\nWait the result of the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task<MessageResult> WaitMessageResult()
          VB: Public Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
          description: "\n"
      overload: XUi.Controls.Dialog.MessageDialog.WaitMessageResult*
      implements:
      - XUi.Controls.Dialog.IDialog.WaitMessageResult
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: XUi.Controls.Dialog.ProgressDialog
    commentId: T:XUi.Controls.Dialog.ProgressDialog
    language: CSharp
    name:
      CSharp: ProgressDialog
      VB: ProgressDialog
    nameWithType:
      CSharp: ProgressDialog
      VB: ProgressDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.ProgressDialog
      VB: XUi.Controls.Dialog.ProgressDialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
      id: ProgressDialog
      path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
      startLine: 22
    summary: "\nLogique d&apos;interaction pour ProgressDialog.xaml\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ProgressDialog : UserControl, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog'
        VB: >-
          Public Class ProgressDialog

              Inherits UserControl

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Controls.UserControl
    implements:
    - System.ComponentModel.ISupportInitialize
    - XUi.Controls.Dialog.IDialog
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.ProgressDialog.#ctor(System.String)
      commentId: M:XUi.Controls.Dialog.ProgressDialog.#ctor(System.String)
      language: CSharp
      name:
        CSharp: ProgressDialog(String)
        VB: ProgressDialog(String)
      nameWithType:
        CSharp: ProgressDialog.ProgressDialog(String)
        VB: ProgressDialog.ProgressDialog(String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.ProgressDialog.ProgressDialog(System.String)
        VB: XUi.Controls.Dialog.ProgressDialog.ProgressDialog(System.String)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        startLine: 24
      syntax:
        content:
          CSharp: public ProgressDialog(string text = "")
          VB: Public Sub New(text As String = "")
        parameters:
        - id: text
          type: System.String
      overload: XUi.Controls.Dialog.ProgressDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.ProgressDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.ProgressDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: ProgressDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: ProgressDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.ProgressDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.ProgressDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        startLine: 39
      summary: "\nMake the initial storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Public Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
          description: ''
        - id: e
          type: System.Windows.RoutedEventArgs
          description: ''
      overload: XUi.Controls.Dialog.ProgressDialog.DialogLoaded*
      implements:
      - XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.ProgressDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.ProgressDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: ProgressDialog.ExitAnimation()
        VB: ProgressDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.ProgressDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.ProgressDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        startLine: 58
      summary: "\nMake the exit storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task ExitAnimation()
          VB: Public Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.ProgressDialog.ExitAnimation*
      implements:
      - XUi.Controls.Dialog.IDialog.ExitAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.ProgressDialog.SetText(System.String)
      commentId: M:XUi.Controls.Dialog.ProgressDialog.SetText(System.String)
      language: CSharp
      name:
        CSharp: SetText(String)
        VB: SetText(String)
      nameWithType:
        CSharp: ProgressDialog.SetText(String)
        VB: ProgressDialog.SetText(String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.ProgressDialog.SetText(System.String)
        VB: XUi.Controls.Dialog.ProgressDialog.SetText(System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        id: SetText
        path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        startLine: 71
      syntax:
        content:
          CSharp: public void SetText(string text)
          VB: Public Sub SetText(text As String)
        parameters:
        - id: text
          type: System.String
      overload: XUi.Controls.Dialog.ProgressDialog.SetText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.ProgressDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: ProgressDialog.WaitMessageResult()
        VB: ProgressDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/DialogControl/ProgressDialog.xaml.cs
        startLine: 73
      syntax:
        content:
          CSharp: public Task<MessageResult> WaitMessageResult()
          VB: Public Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
      overload: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult*
      implements:
      - XUi.Controls.Dialog.IDialog.WaitMessageResult
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: XUi.Controls.Dialog.SelectDialog
    commentId: T:XUi.Controls.Dialog.SelectDialog
    language: CSharp
    name:
      CSharp: SelectDialog
      VB: SelectDialog
    nameWithType:
      CSharp: SelectDialog
      VB: SelectDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.SelectDialog
      VB: XUi.Controls.Dialog.SelectDialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
      id: SelectDialog
      path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
      startLine: 20
    summary: "\nLogique d&apos;interaction pour SelectDialog.xaml\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SelectDialog : UserControl, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog'
        VB: >-
          Public Class SelectDialog

              Inherits UserControl

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Controls.UserControl
    implements:
    - System.ComponentModel.ISupportInitialize
    - XUi.Controls.Dialog.IDialog
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.SelectDialog.#ctor(System.String,System.String)
      commentId: M:XUi.Controls.Dialog.SelectDialog.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: SelectDialog(String, String)
        VB: SelectDialog(String, String)
      nameWithType:
        CSharp: SelectDialog.SelectDialog(String, String)
        VB: SelectDialog.SelectDialog(String, String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.SelectDialog.SelectDialog(System.String, System.String)
        VB: XUi.Controls.Dialog.SelectDialog.SelectDialog(System.String, System.String)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        startLine: 22
      syntax:
        content:
          CSharp: public SelectDialog(string title, string message)
          VB: Public Sub New(title As String, message As String)
        parameters:
        - id: title
          type: System.String
        - id: message
          type: System.String
      overload: XUi.Controls.Dialog.SelectDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.SelectDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      commentId: M:XUi.Controls.Dialog.SelectDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      language: CSharp
      name:
        CSharp: SelectDialog(DialogSettings)
        VB: SelectDialog(DialogSettings)
      nameWithType:
        CSharp: SelectDialog.SelectDialog(DialogSettings)
        VB: SelectDialog.SelectDialog(DialogSettings)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.SelectDialog.SelectDialog(XUi.Controls.Dialog.DialogSettings)
        VB: XUi.Controls.Dialog.SelectDialog.SelectDialog(XUi.Controls.Dialog.DialogSettings)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        startLine: 33
      syntax:
        content:
          CSharp: public SelectDialog(DialogSettings dialogSettings)
          VB: Public Sub New(dialogSettings As DialogSettings)
        parameters:
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
      overload: XUi.Controls.Dialog.SelectDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.SelectDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.SelectDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: SelectDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: SelectDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.SelectDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.SelectDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        startLine: 57
      summary: "\nMake the initial storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Public Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
          description: ''
        - id: e
          type: System.Windows.RoutedEventArgs
          description: ''
      overload: XUi.Controls.Dialog.SelectDialog.DialogLoaded*
      implements:
      - XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.SelectDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.SelectDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: SelectDialog.ExitAnimation()
        VB: SelectDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.SelectDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.SelectDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        startLine: 76
      summary: "\nMake the exit storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task ExitAnimation()
          VB: Public Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.SelectDialog.ExitAnimation*
      implements:
      - XUi.Controls.Dialog.IDialog.ExitAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.SelectDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.SelectDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: SelectDialog.WaitMessageResult()
        VB: SelectDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.SelectDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.SelectDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/DialogControl/SelectDialog.xaml.cs
        startLine: 95
      summary: "\nWait the result of the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task<MessageResult> WaitMessageResult()
          VB: Public Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
          description: "\n"
      overload: XUi.Controls.Dialog.SelectDialog.WaitMessageResult*
      implements:
      - XUi.Controls.Dialog.IDialog.WaitMessageResult
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: XUi.Controls.Dialog.IDialog
    commentId: T:XUi.Controls.Dialog.IDialog
    language: CSharp
    name:
      CSharp: IDialog
      VB: IDialog
    nameWithType:
      CSharp: IDialog
      VB: IDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.IDialog
      VB: XUi.Controls.Dialog.IDialog
    type: Interface
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/IDialog.cs
      id: IDialog
      path: ../XUi/Controls/Dialog/IDialog.cs
      startLine: 9
    syntax:
      content:
        CSharp: public interface IDialog
        VB: Public Interface IDialog
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: XUi.Controls.Dialog.IDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.IDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: IDialog.WaitMessageResult()
        VB: IDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.IDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.IDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/IDialog.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/IDialog.cs
        startLine: 11
      syntax:
        content:
          CSharp: Task<MessageResult> WaitMessageResult()
          VB: Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
      overload: XUi.Controls.Dialog.IDialog.WaitMessageResult*
      modifiers:
        CSharp: []
        VB: []
    - id: XUi.Controls.Dialog.IDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.IDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: IDialog.ExitAnimation()
        VB: IDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.IDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.IDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/IDialog.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/IDialog.cs
        startLine: 12
      syntax:
        content:
          CSharp: Task ExitAnimation()
          VB: Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
      overload: XUi.Controls.Dialog.IDialog.ExitAnimation*
      modifiers:
        CSharp: []
        VB: []
    - id: XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: IDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: IDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/IDialog.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/IDialog.cs
        startLine: 14
      syntax:
        content:
          CSharp: void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.Windows.RoutedEventArgs
      overload: XUi.Controls.Dialog.IDialog.DialogLoaded*
      modifiers:
        CSharp: []
        VB: []
  - id: XUi.Controls.Dialog.InputDialog
    commentId: T:XUi.Controls.Dialog.InputDialog
    language: CSharp
    name:
      CSharp: InputDialog
      VB: InputDialog
    nameWithType:
      CSharp: InputDialog
      VB: InputDialog
    qualifiedName:
      CSharp: XUi.Controls.Dialog.InputDialog
      VB: XUi.Controls.Dialog.InputDialog
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Controls.Dialog
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
      id: InputDialog
      path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
      startLine: 21
    summary: "\nLogique d&apos;interaction pour InputDialog.xaml\n"
    example: []
    syntax:
      content:
        CSharp: 'public class InputDialog : UserControl, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog'
        VB: >-
          Public Class InputDialog

              Inherits UserControl

              Implements DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient, IAddChild, IDialog
    inheritance:
    - System.Object
    - System.Windows.Threading.DispatcherObject
    - System.Windows.DependencyObject
    - System.Windows.Media.Visual
    - System.Windows.UIElement
    - System.Windows.FrameworkElement
    - System.Windows.Controls.Control
    - System.Windows.Controls.ContentControl
    - System.Windows.Controls.UserControl
    implements:
    - System.ComponentModel.ISupportInitialize
    - XUi.Controls.Dialog.IDialog
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Controls.Dialog.InputDialog.#ctor(System.String,System.String,System.String)
      commentId: M:XUi.Controls.Dialog.InputDialog.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: InputDialog(String, String, String)
        VB: InputDialog(String, String, String)
      nameWithType:
        CSharp: InputDialog.InputDialog(String, String, String)
        VB: InputDialog.InputDialog(String, String, String)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.InputDialog(System.String, System.String, System.String)
        VB: XUi.Controls.Dialog.InputDialog.InputDialog(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 25
      syntax:
        content:
          CSharp: public InputDialog(string title, string message, string dataToSet)
          VB: Public Sub New(title As String, message As String, dataToSet As String)
        parameters:
        - id: title
          type: System.String
        - id: message
          type: System.String
        - id: dataToSet
          type: System.String
      overload: XUi.Controls.Dialog.InputDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.InputDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      commentId: M:XUi.Controls.Dialog.InputDialog.#ctor(XUi.Controls.Dialog.DialogSettings)
      language: CSharp
      name:
        CSharp: InputDialog(DialogSettings)
        VB: InputDialog(DialogSettings)
      nameWithType:
        CSharp: InputDialog.InputDialog(DialogSettings)
        VB: InputDialog.InputDialog(DialogSettings)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.InputDialog(XUi.Controls.Dialog.DialogSettings)
        VB: XUi.Controls.Dialog.InputDialog.InputDialog(XUi.Controls.Dialog.DialogSettings)
      type: Constructor
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: .ctor
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 35
      syntax:
        content:
          CSharp: public InputDialog(DialogSettings dialogSettings)
          VB: Public Sub New(dialogSettings As DialogSettings)
        parameters:
        - id: dialogSettings
          type: XUi.Controls.Dialog.DialogSettings
      overload: XUi.Controls.Dialog.InputDialog.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.InputDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      commentId: M:XUi.Controls.Dialog.InputDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      language: CSharp
      name:
        CSharp: DialogLoaded(Object, RoutedEventArgs)
        VB: DialogLoaded(Object, RoutedEventArgs)
      nameWithType:
        CSharp: InputDialog.DialogLoaded(Object, RoutedEventArgs)
        VB: InputDialog.DialogLoaded(Object, RoutedEventArgs)
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
        VB: XUi.Controls.Dialog.InputDialog.DialogLoaded(System.Object, System.Windows.RoutedEventArgs)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: DialogLoaded
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 68
      summary: "\nMake the initial storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public void DialogLoaded(object sender, RoutedEventArgs e)
          VB: Public Sub DialogLoaded(sender As Object, e As RoutedEventArgs)
        parameters:
        - id: sender
          type: System.Object
          description: ''
        - id: e
          type: System.Windows.RoutedEventArgs
          description: ''
      overload: XUi.Controls.Dialog.InputDialog.DialogLoaded*
      implements:
      - XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.InputDialog.ExitAnimation
      commentId: M:XUi.Controls.Dialog.InputDialog.ExitAnimation
      language: CSharp
      name:
        CSharp: ExitAnimation()
        VB: ExitAnimation()
      nameWithType:
        CSharp: InputDialog.ExitAnimation()
        VB: InputDialog.ExitAnimation()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.ExitAnimation()
        VB: XUi.Controls.Dialog.InputDialog.ExitAnimation()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: ExitAnimation
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 87
      summary: "\nMake the exit storyboard to the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task ExitAnimation()
          VB: Public Function ExitAnimation As Task
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.Controls.Dialog.InputDialog.ExitAnimation*
      implements:
      - XUi.Controls.Dialog.IDialog.ExitAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.InputDialog.WaitMessageResult
      commentId: M:XUi.Controls.Dialog.InputDialog.WaitMessageResult
      language: CSharp
      name:
        CSharp: WaitMessageResult()
        VB: WaitMessageResult()
      nameWithType:
        CSharp: InputDialog.WaitMessageResult()
        VB: InputDialog.WaitMessageResult()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.WaitMessageResult()
        VB: XUi.Controls.Dialog.InputDialog.WaitMessageResult()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: WaitMessageResult
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 106
      summary: "\nWait the result of the dialog\n"
      example: []
      syntax:
        content:
          CSharp: public Task<MessageResult> WaitMessageResult()
          VB: Public Function WaitMessageResult As Task(Of MessageResult)
        return:
          type: System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
          description: "\n"
      overload: XUi.Controls.Dialog.InputDialog.WaitMessageResult*
      implements:
      - XUi.Controls.Dialog.IDialog.WaitMessageResult
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Controls.Dialog.InputDialog.DataEntered
      commentId: M:XUi.Controls.Dialog.InputDialog.DataEntered
      language: CSharp
      name:
        CSharp: DataEntered()
        VB: DataEntered()
      nameWithType:
        CSharp: InputDialog.DataEntered()
        VB: InputDialog.DataEntered()
      qualifiedName:
        CSharp: XUi.Controls.Dialog.InputDialog.DataEntered()
        VB: XUi.Controls.Dialog.InputDialog.DataEntered()
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Controls.Dialog
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        id: DataEntered
        path: ../XUi/Controls/Dialog/DialogControl/InputDialog.xaml.cs
        startLine: 120
      syntax:
        content:
          CSharp: public string DataEntered()
          VB: Public Function DataEntered As String
        return:
          type: System.String
      overload: XUi.Controls.Dialog.InputDialog.DataEntered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: XUi.Converters
  commentId: N:XUi.Converters
  language: CSharp
  name:
    CSharp: XUi.Converters
    VB: XUi.Converters
  nameWithType:
    CSharp: XUi.Converters
    VB: XUi.Converters
  qualifiedName:
    CSharp: XUi.Converters
    VB: XUi.Converters
  type: Namespace
  assemblies:
  - XUi
  modifiers: {}
  items:
  - id: XUi.Converters.MathConverter
    commentId: T:XUi.Converters.MathConverter
    language: CSharp
    name:
      CSharp: MathConverter
      VB: MathConverter
    nameWithType:
      CSharp: MathConverter
      VB: MathConverter
    qualifiedName:
      CSharp: XUi.Converters.MathConverter
      VB: XUi.Converters.MathConverter
    type: Class
    assemblies:
    - XUi
    namespace: XUi.Converters
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
      id: MathConverter
      path: ../XUi/Converters/MathConverter.cs
      startLine: 16
    summary: "\nImplement a math converter\nUse @VALUE to get the value\nCan get a ressource defined in the application\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MathConverter : IValueConverter'
        VB: >-
          Public Class MathConverter

              Implements IValueConverter
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.Converters.MathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
      commentId: M:XUi.Converters.MathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
      language: CSharp
      name:
        CSharp: Convert(Object, Type, Object, CultureInfo)
        VB: Convert(Object, Type, Object, CultureInfo)
      nameWithType:
        CSharp: MathConverter.Convert(Object, Type, Object, CultureInfo)
        VB: MathConverter.Convert(Object, Type, Object, CultureInfo)
      qualifiedName:
        CSharp: XUi.Converters.MathConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
        VB: XUi.Converters.MathConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Converters
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
        id: Convert
        path: ../XUi/Converters/MathConverter.cs
        startLine: 30
      summary: "\nConverter base method\n"
      example: []
      syntax:
        content:
          CSharp: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
          VB: Public Function Convert(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
        parameters:
        - id: value
          type: System.Object
          description: Value to use
        - id: targetType
          type: System.Type
          description: ''
        - id: parameter
          type: System.Object
          description: Main math expression
        - id: culture
          type: System.Globalization.CultureInfo
          description: ''
        return:
          type: System.Object
          description: Main math expression evaluated
      overload: XUi.Converters.MathConverter.Convert*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Converters.MathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
      commentId: M:XUi.Converters.MathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
      language: CSharp
      name:
        CSharp: ConvertBack(Object, Type, Object, CultureInfo)
        VB: ConvertBack(Object, Type, Object, CultureInfo)
      nameWithType:
        CSharp: MathConverter.ConvertBack(Object, Type, Object, CultureInfo)
        VB: MathConverter.ConvertBack(Object, Type, Object, CultureInfo)
      qualifiedName:
        CSharp: XUi.Converters.MathConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
        VB: XUi.Converters.MathConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Converters
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
        id: ConvertBack
        path: ../XUi/Converters/MathConverter.cs
        startLine: 75
      syntax:
        content:
          CSharp: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
          VB: Public Function ConvertBack(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
        parameters:
        - id: value
          type: System.Object
        - id: targetType
          type: System.Type
        - id: parameter
          type: System.Object
        - id: culture
          type: System.Globalization.CultureInfo
        return:
          type: System.Object
      overload: XUi.Converters.MathConverter.ConvertBack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Converters.MathConverter.RessourceEval(System.String)
      commentId: M:XUi.Converters.MathConverter.RessourceEval(System.String)
      language: CSharp
      name:
        CSharp: RessourceEval(String)
        VB: RessourceEval(String)
      nameWithType:
        CSharp: MathConverter.RessourceEval(String)
        VB: MathConverter.RessourceEval(String)
      qualifiedName:
        CSharp: XUi.Converters.MathConverter.RessourceEval(System.String)
        VB: XUi.Converters.MathConverter.RessourceEval(System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Converters
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
        id: RessourceEval
        path: ../XUi/Converters/MathConverter.cs
        startLine: 89
      summary: "\nFind the ressource value in the application\n"
      example: []
      syntax:
        content:
          CSharp: public string RessourceEval(string ressource)
          VB: Public Function RessourceEval(ressource As String) As String
        parameters:
        - id: ressource
          type: System.String
          description: Ressource name
        return:
          type: System.String
          description: Ressource value by his name
      overload: XUi.Converters.MathConverter.RessourceEval*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Converters.MathConverter.ParenthesesEval(System.String)
      commentId: M:XUi.Converters.MathConverter.ParenthesesEval(System.String)
      language: CSharp
      name:
        CSharp: ParenthesesEval(String)
        VB: ParenthesesEval(String)
      nameWithType:
        CSharp: MathConverter.ParenthesesEval(String)
        VB: MathConverter.ParenthesesEval(String)
      qualifiedName:
        CSharp: XUi.Converters.MathConverter.ParenthesesEval(System.String)
        VB: XUi.Converters.MathConverter.ParenthesesEval(System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Converters
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
        id: ParenthesesEval
        path: ../XUi/Converters/MathConverter.cs
        startLine: 117
      summary: "\nEvaluate a parenthese expression\n"
      example: []
      syntax:
        content:
          CSharp: public double ParenthesesEval(string mathEquation)
          VB: Public Function ParenthesesEval(mathEquation As String) As Double
        parameters:
        - id: mathEquation
          type: System.String
          description: Parenthese math expression
        return:
          type: System.Double
          description: Parenthese expression evaluated
      overload: XUi.Converters.MathConverter.ParenthesesEval*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: XUi.Converters.MathConverter.MathExpressionEval(System.String[],System.String[])
      commentId: M:XUi.Converters.MathConverter.MathExpressionEval(System.String[],System.String[])
      language: CSharp
      name:
        CSharp: MathExpressionEval(String[], String[])
        VB: MathExpressionEval(String(), String())
      nameWithType:
        CSharp: MathConverter.MathExpressionEval(String[], String[])
        VB: MathConverter.MathExpressionEval(String(), String())
      qualifiedName:
        CSharp: XUi.Converters.MathConverter.MathExpressionEval(System.String[], System.String[])
        VB: XUi.Converters.MathConverter.MathExpressionEval(System.String(), System.String())
      type: Method
      assemblies:
      - XUi
      namespace: XUi.Converters
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/Converters/MathConverter.cs
        id: MathExpressionEval
        path: ../XUi/Converters/MathConverter.cs
        startLine: 148
      summary: "\nEvaluate any math expression\nThis method is the heart of the math converter\n"
      example: []
      syntax:
        content:
          CSharp: public double MathExpressionEval(string[] operators, string[] numbers)
          VB: Public Function MathExpressionEval(operators As String(), numbers As String()) As Double
        parameters:
        - id: operators
          type: System.String[]
          description: All the operators in the math expression
        - id: numbers
          type: System.String[]
          description: All the numbers in the math expression
        return:
          type: System.Double
          description: Math expression evaluated by the operators and the numbers passed in the method
      overload: XUi.Converters.MathConverter.MathExpressionEval*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: XUi.UI
  commentId: N:XUi.UI
  language: CSharp
  name:
    CSharp: XUi.UI
    VB: XUi.UI
  nameWithType:
    CSharp: XUi.UI
    VB: XUi.UI
  qualifiedName:
    CSharp: XUi.UI
    VB: XUi.UI
  type: Namespace
  assemblies:
  - XUi
  modifiers: {}
  items:
  - id: XUi.UI.AnimationManager
    commentId: T:XUi.UI.AnimationManager
    language: CSharp
    name:
      CSharp: AnimationManager
      VB: AnimationManager
    nameWithType:
      CSharp: AnimationManager
      VB: AnimationManager
    qualifiedName:
      CSharp: XUi.UI.AnimationManager
      VB: XUi.UI.AnimationManager
    type: Class
    assemblies:
    - XUi
    namespace: XUi.UI
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
      id: AnimationManager
      path: ../XUi/UI/AnimationManager.cs
      startLine: 10
    syntax:
      content:
        CSharp: public class AnimationManager
        VB: Public Class AnimationManager
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.UI.AnimationManager.LoadTransitionOpen(System.Windows.FrameworkElement,XUi.UI.AnimationManager.TransitionType)
      commentId: M:XUi.UI.AnimationManager.LoadTransitionOpen(System.Windows.FrameworkElement,XUi.UI.AnimationManager.TransitionType)
      language: CSharp
      name:
        CSharp: LoadTransitionOpen(FrameworkElement, AnimationManager.TransitionType)
        VB: LoadTransitionOpen(FrameworkElement, AnimationManager.TransitionType)
      nameWithType:
        CSharp: AnimationManager.LoadTransitionOpen(FrameworkElement, AnimationManager.TransitionType)
        VB: AnimationManager.LoadTransitionOpen(FrameworkElement, AnimationManager.TransitionType)
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.LoadTransitionOpen(System.Windows.FrameworkElement, XUi.UI.AnimationManager.TransitionType)
        VB: XUi.UI.AnimationManager.LoadTransitionOpen(System.Windows.FrameworkElement, XUi.UI.AnimationManager.TransitionType)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: LoadTransitionOpen
        path: ../XUi/UI/AnimationManager.cs
        startLine: 25
      summary: "\nLoad a transition with the &quot;open&quot; type\n"
      example: []
      syntax:
        content:
          CSharp: public static Task LoadTransitionOpen(FrameworkElement element, AnimationManager.TransitionType transitionType)
          VB: Public Shared Function LoadTransitionOpen(element As FrameworkElement, transitionType As AnimationManager.TransitionType) As Task
        parameters:
        - id: element
          type: System.Windows.FrameworkElement
          description: Element to apply the transition
        - id: transitionType
          type: XUi.UI.AnimationManager.TransitionType
          description: Transition type to apply
        return:
          type: System.Threading.Tasks.Task
      overload: XUi.UI.AnimationManager.LoadTransitionOpen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: XUi.UI.AnimationManager.LoadTransitionClose(System.Windows.FrameworkElement,XUi.UI.AnimationManager.TransitionType)
      commentId: M:XUi.UI.AnimationManager.LoadTransitionClose(System.Windows.FrameworkElement,XUi.UI.AnimationManager.TransitionType)
      language: CSharp
      name:
        CSharp: LoadTransitionClose(FrameworkElement, AnimationManager.TransitionType)
        VB: LoadTransitionClose(FrameworkElement, AnimationManager.TransitionType)
      nameWithType:
        CSharp: AnimationManager.LoadTransitionClose(FrameworkElement, AnimationManager.TransitionType)
        VB: AnimationManager.LoadTransitionClose(FrameworkElement, AnimationManager.TransitionType)
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.LoadTransitionClose(System.Windows.FrameworkElement, XUi.UI.AnimationManager.TransitionType)
        VB: XUi.UI.AnimationManager.LoadTransitionClose(System.Windows.FrameworkElement, XUi.UI.AnimationManager.TransitionType)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: LoadTransitionClose
        path: ../XUi/UI/AnimationManager.cs
        startLine: 39
      summary: "\nLoad a transition with the &quot;close&quot; type\n"
      example: []
      syntax:
        content:
          CSharp: public static Task LoadTransitionClose(FrameworkElement element, AnimationManager.TransitionType transitionType)
          VB: Public Shared Function LoadTransitionClose(element As FrameworkElement, transitionType As AnimationManager.TransitionType) As Task
        parameters:
        - id: element
          type: System.Windows.FrameworkElement
          description: Element to apply the transition
        - id: transitionType
          type: XUi.UI.AnimationManager.TransitionType
          description: Transition type to apply
        return:
          type: System.Threading.Tasks.Task
      overload: XUi.UI.AnimationManager.LoadTransitionClose*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: XUi.UI.AnimationManager.LoadAnimation(System.Windows.FrameworkElement,XUi.UI.AnimationManager.AnimationType,System.Double,System.Double,System.Int32)
      commentId: M:XUi.UI.AnimationManager.LoadAnimation(System.Windows.FrameworkElement,XUi.UI.AnimationManager.AnimationType,System.Double,System.Double,System.Int32)
      language: CSharp
      name:
        CSharp: LoadAnimation(FrameworkElement, AnimationManager.AnimationType, Double, Double, Int32)
        VB: LoadAnimation(FrameworkElement, AnimationManager.AnimationType, Double, Double, Int32)
      nameWithType:
        CSharp: AnimationManager.LoadAnimation(FrameworkElement, AnimationManager.AnimationType, Double, Double, Int32)
        VB: AnimationManager.LoadAnimation(FrameworkElement, AnimationManager.AnimationType, Double, Double, Int32)
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.LoadAnimation(System.Windows.FrameworkElement, XUi.UI.AnimationManager.AnimationType, System.Double, System.Double, System.Int32)
        VB: XUi.UI.AnimationManager.LoadAnimation(System.Windows.FrameworkElement, XUi.UI.AnimationManager.AnimationType, System.Double, System.Double, System.Int32)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: LoadAnimation
        path: ../XUi/UI/AnimationManager.cs
        startLine: 69
      summary: "\nLoad an animation from the a <xref href=\"XUi.UI.AnimationManager.AnimationType\" data-throw-if-not-resolved=\"false\"></xref> enum\n"
      example: []
      syntax:
        content:
          CSharp: public static Task LoadAnimation(FrameworkElement element, AnimationManager.AnimationType animationType, double fromValue = 0, double toValue = 1, int animationTime = 150)
          VB: Public Shared Function LoadAnimation(element As FrameworkElement, animationType As AnimationManager.AnimationType, fromValue As Double = 0, toValue As Double = 1, animationTime As Integer = 150) As Task
        parameters:
        - id: element
          type: System.Windows.FrameworkElement
          description: Element to load the animation
        - id: animationType
          type: XUi.UI.AnimationManager.AnimationType
          description: Animation type, search for an <xref href="System.Windows.Media.Animation.Storyboard" data-throw-if-not-resolved="false"></xref> in the ressource
        - id: fromValue
          type: System.Double
          description: Start value of the animation
        - id: toValue
          type: System.Double
          description: End value of the animation
        - id: animationTime
          type: System.Int32
          description: Time of the animation in milliseconds
        return:
          type: System.Threading.Tasks.Task
          description: "\n"
      overload: XUi.UI.AnimationManager.LoadAnimation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        XUi.UI.AnimationManager.AnimationType: 
        System.Windows.Media.Animation.Storyboard: 
  - id: XUi.UI.AnimationManager.TransitionType
    commentId: T:XUi.UI.AnimationManager.TransitionType
    language: CSharp
    name:
      CSharp: AnimationManager.TransitionType
      VB: AnimationManager.TransitionType
    nameWithType:
      CSharp: AnimationManager.TransitionType
      VB: AnimationManager.TransitionType
    qualifiedName:
      CSharp: XUi.UI.AnimationManager.TransitionType
      VB: XUi.UI.AnimationManager.TransitionType
    type: Enum
    assemblies:
    - XUi
    namespace: XUi.UI
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
      id: TransitionType
      path: ../XUi/UI/AnimationManager.cs
      startLine: 14
    syntax:
      content:
        CSharp: public enum TransitionType
        VB: Public Enum TransitionType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: XUi.UI.AnimationManager.TransitionType.PageZoom
      commentId: F:XUi.UI.AnimationManager.TransitionType.PageZoom
      language: CSharp
      name:
        CSharp: PageZoom
        VB: PageZoom
      nameWithType:
        CSharp: AnimationManager.TransitionType.PageZoom
        VB: AnimationManager.TransitionType.PageZoom
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.TransitionType.PageZoom
        VB: XUi.UI.AnimationManager.TransitionType.PageZoom
      type: Field
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: PageZoom
        path: ../XUi/UI/AnimationManager.cs
        startLine: 16
      syntax:
        content:
          CSharp: PageZoom = 0
          VB: PageZoom = 0
        return:
          type: XUi.UI.AnimationManager.TransitionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: XUi.UI.AnimationManager.AnimationType
    commentId: T:XUi.UI.AnimationManager.AnimationType
    language: CSharp
    name:
      CSharp: AnimationManager.AnimationType
      VB: AnimationManager.AnimationType
    nameWithType:
      CSharp: AnimationManager.AnimationType
      VB: AnimationManager.AnimationType
    qualifiedName:
      CSharp: XUi.UI.AnimationManager.AnimationType
      VB: XUi.UI.AnimationManager.AnimationType
    type: Enum
    assemblies:
    - XUi
    namespace: XUi.UI
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
      id: AnimationType
      path: ../XUi/UI/AnimationManager.cs
      startLine: 49
    syntax:
      content:
        CSharp: public enum AnimationType
        VB: Public Enum AnimationType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: XUi.UI.AnimationManager.AnimationType.Fade
      commentId: F:XUi.UI.AnimationManager.AnimationType.Fade
      language: CSharp
      name:
        CSharp: Fade
        VB: Fade
      nameWithType:
        CSharp: AnimationManager.AnimationType.Fade
        VB: AnimationManager.AnimationType.Fade
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.AnimationType.Fade
        VB: XUi.UI.AnimationManager.AnimationType.Fade
      type: Field
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: Fade
        path: ../XUi/UI/AnimationManager.cs
        startLine: 51
      syntax:
        content:
          CSharp: Fade = 0
          VB: Fade = 0
        return:
          type: XUi.UI.AnimationManager.AnimationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.UI.AnimationManager.AnimationType.ExpandHeight
      commentId: F:XUi.UI.AnimationManager.AnimationType.ExpandHeight
      language: CSharp
      name:
        CSharp: ExpandHeight
        VB: ExpandHeight
      nameWithType:
        CSharp: AnimationManager.AnimationType.ExpandHeight
        VB: AnimationManager.AnimationType.ExpandHeight
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.AnimationType.ExpandHeight
        VB: XUi.UI.AnimationManager.AnimationType.ExpandHeight
      type: Field
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: ExpandHeight
        path: ../XUi/UI/AnimationManager.cs
        startLine: 52
      syntax:
        content:
          CSharp: ExpandHeight = 1
          VB: ExpandHeight = 1
        return:
          type: XUi.UI.AnimationManager.AnimationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.UI.AnimationManager.AnimationType.ExpandWidth
      commentId: F:XUi.UI.AnimationManager.AnimationType.ExpandWidth
      language: CSharp
      name:
        CSharp: ExpandWidth
        VB: ExpandWidth
      nameWithType:
        CSharp: AnimationManager.AnimationType.ExpandWidth
        VB: AnimationManager.AnimationType.ExpandWidth
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.AnimationType.ExpandWidth
        VB: XUi.UI.AnimationManager.AnimationType.ExpandWidth
      type: Field
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: ExpandWidth
        path: ../XUi/UI/AnimationManager.cs
        startLine: 53
      syntax:
        content:
          CSharp: ExpandWidth = 2
          VB: ExpandWidth = 2
        return:
          type: XUi.UI.AnimationManager.AnimationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: XUi.UI.AnimationManager.AnimationType.Rotate
      commentId: F:XUi.UI.AnimationManager.AnimationType.Rotate
      language: CSharp
      name:
        CSharp: Rotate
        VB: Rotate
      nameWithType:
        CSharp: AnimationManager.AnimationType.Rotate
        VB: AnimationManager.AnimationType.Rotate
      qualifiedName:
        CSharp: XUi.UI.AnimationManager.AnimationType.Rotate
        VB: XUi.UI.AnimationManager.AnimationType.Rotate
      type: Field
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/AnimationManager.cs
        id: Rotate
        path: ../XUi/UI/AnimationManager.cs
        startLine: 54
      syntax:
        content:
          CSharp: Rotate = 3
          VB: Rotate = 3
        return:
          type: XUi.UI.AnimationManager.AnimationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: XUi.UI.ColorManager
    commentId: T:XUi.UI.ColorManager
    language: CSharp
    name:
      CSharp: ColorManager
      VB: ColorManager
    nameWithType:
      CSharp: ColorManager
      VB: ColorManager
    qualifiedName:
      CSharp: XUi.UI.ColorManager
      VB: XUi.UI.ColorManager
    type: Class
    assemblies:
    - XUi
    namespace: XUi.UI
    source:
      remote:
        path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/ColorManager.cs
      id: ColorManager
      path: ../XUi/UI/ColorManager.cs
      startLine: 12
    summary: "\nManage the color of XUi\n"
    example: []
    syntax:
      content:
        CSharp: public class ColorManager
        VB: Public Class ColorManager
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: XUi.UI.ColorManager.CreateBaseColor(System.String)
      commentId: M:XUi.UI.ColorManager.CreateBaseColor(System.String)
      language: CSharp
      name:
        CSharp: CreateBaseColor(String)
        VB: CreateBaseColor(String)
      nameWithType:
        CSharp: ColorManager.CreateBaseColor(String)
        VB: ColorManager.CreateBaseColor(String)
      qualifiedName:
        CSharp: XUi.UI.ColorManager.CreateBaseColor(System.String)
        VB: XUi.UI.ColorManager.CreateBaseColor(System.String)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/ColorManager.cs
        id: CreateBaseColor
        path: ../XUi/UI/ColorManager.cs
        startLine: 23
      summary: "\nReturn the base color depend to the hex color\n"
      example: []
      syntax:
        content:
          CSharp: public static Color CreateBaseColor(string hexadecimalColor)
          VB: Public Shared Function CreateBaseColor(hexadecimalColor As String) As Color
        parameters:
        - id: hexadecimalColor
          type: System.String
          description: Hexadecimal color in <xref href="System.String" data-throw-if-not-resolved="false"></xref>
        return:
          type: System.Windows.Media.Color
          description: "\nBase color created\n"
      overload: XUi.UI.ColorManager.CreateBaseColor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.String: 
    - id: XUi.UI.ColorManager.CreateBaseColor(System.Byte,System.Byte,System.Byte)
      commentId: M:XUi.UI.ColorManager.CreateBaseColor(System.Byte,System.Byte,System.Byte)
      language: CSharp
      name:
        CSharp: CreateBaseColor(Byte, Byte, Byte)
        VB: CreateBaseColor(Byte, Byte, Byte)
      nameWithType:
        CSharp: ColorManager.CreateBaseColor(Byte, Byte, Byte)
        VB: ColorManager.CreateBaseColor(Byte, Byte, Byte)
      qualifiedName:
        CSharp: XUi.UI.ColorManager.CreateBaseColor(System.Byte, System.Byte, System.Byte)
        VB: XUi.UI.ColorManager.CreateBaseColor(System.Byte, System.Byte, System.Byte)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/ColorManager.cs
        id: CreateBaseColor
        path: ../XUi/UI/ColorManager.cs
        startLine: 39
      summary: "\nReturn the base color depend to the rgb values\n"
      example: []
      syntax:
        content:
          CSharp: public static Color CreateBaseColor(byte r, byte g, byte b)
          VB: Public Shared Function CreateBaseColor(r As Byte, g As Byte, b As Byte) As Color
        parameters:
        - id: r
          type: System.Byte
          description: Red color value
        - id: g
          type: System.Byte
          description: Green color value
        - id: b
          type: System.Byte
          description: Blue color value
        return:
          type: System.Windows.Media.Color
          description: "\nBase color created\n"
      overload: XUi.UI.ColorManager.CreateBaseColor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: XUi.UI.ColorManager.CreateColorPalette(System.Windows.Media.Color)
      commentId: M:XUi.UI.ColorManager.CreateColorPalette(System.Windows.Media.Color)
      language: CSharp
      name:
        CSharp: CreateColorPalette(Color)
        VB: CreateColorPalette(Color)
      nameWithType:
        CSharp: ColorManager.CreateColorPalette(Color)
        VB: ColorManager.CreateColorPalette(Color)
      qualifiedName:
        CSharp: XUi.UI.ColorManager.CreateColorPalette(System.Windows.Media.Color)
        VB: XUi.UI.ColorManager.CreateColorPalette(System.Windows.Media.Color)
      type: Method
      assemblies:
      - XUi
      namespace: XUi.UI
      source:
        remote:
          path: C:/Users/tcroi/source/repos/XUi/net472/XUi/UI/ColorManager.cs
        id: CreateColorPalette
        path: ../XUi/UI/ColorManager.cs
        startLine: 55
      summary: "\nCreate the new color palette from the base color\n"
      example: []
      syntax:
        content:
          CSharp: public static void CreateColorPalette(Color baseColor)
          VB: Public Shared Sub CreateColorPalette(baseColor As Color)
        parameters:
        - id: baseColor
          type: System.Windows.Media.Color
          description: Color base used to create the color palette
      overload: XUi.UI.ColorManager.CreateColorPalette*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  XUi.XUiTheme:
    name:
      CSharp:
      - id: XUi.XUiTheme
        name: XUiTheme
        nameWithType: XUiTheme
        qualifiedName: XUi.XUiTheme
      VB:
      - id: XUi.XUiTheme
        name: XUiTheme
        nameWithType: XUiTheme
        qualifiedName: XUi.XUiTheme
    isDefinition: true
    commentId: T:XUi.XUiTheme
  System.Windows:
    name:
      CSharp:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
        isExternal: true
      VB:
      - name: System.Windows
        nameWithType: System.Windows
        qualifiedName: System.Windows
    isDefinition: true
    commentId: N:System.Windows
  System.Windows.ResourceDictionary:
    name:
      CSharp:
      - id: System.Windows.ResourceDictionary
        name: ResourceDictionary
        nameWithType: ResourceDictionary
        qualifiedName: System.Windows.ResourceDictionary
        isExternal: true
      VB:
      - id: System.Windows.ResourceDictionary
        name: ResourceDictionary
        nameWithType: ResourceDictionary
        qualifiedName: System.Windows.ResourceDictionary
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.ResourceDictionary
  XUi.XUiTheme.XUiDictionaries:
    commentId: F:XUi.XUiTheme.XUiDictionaries
  XUi.XUiTheme.Initialize*:
    name:
      CSharp:
      - id: XUi.XUiTheme.Initialize*
        name: Initialize
        nameWithType: XUiTheme.Initialize
        qualifiedName: XUi.XUiTheme.Initialize
      VB:
      - id: XUi.XUiTheme.Initialize*
        name: Initialize
        nameWithType: XUiTheme.Initialize
        qualifiedName: XUi.XUiTheme.Initialize
    isDefinition: true
    commentId: Overload:XUi.XUiTheme.Initialize
  XUi.XUiTheme.EnableDarkMode*:
    name:
      CSharp:
      - id: XUi.XUiTheme.EnableDarkMode*
        name: EnableDarkMode
        nameWithType: XUiTheme.EnableDarkMode
        qualifiedName: XUi.XUiTheme.EnableDarkMode
      VB:
      - id: XUi.XUiTheme.EnableDarkMode*
        name: EnableDarkMode
        nameWithType: XUiTheme.EnableDarkMode
        qualifiedName: XUi.XUiTheme.EnableDarkMode
    isDefinition: true
    commentId: Overload:XUi.XUiTheme.EnableDarkMode
  XUi.XUiTheme.EnableLightMode*:
    name:
      CSharp:
      - id: XUi.XUiTheme.EnableLightMode*
        name: EnableLightMode
        nameWithType: XUiTheme.EnableLightMode
        qualifiedName: XUi.XUiTheme.EnableLightMode
      VB:
      - id: XUi.XUiTheme.EnableLightMode*
        name: EnableLightMode
        nameWithType: XUiTheme.EnableLightMode
        qualifiedName: XUi.XUiTheme.EnableLightMode
    isDefinition: true
    commentId: Overload:XUi.XUiTheme.EnableLightMode
  XUi:
    name:
      CSharp:
      - name: XUi
        nameWithType: XUi
        qualifiedName: XUi
      VB:
      - name: XUi
        nameWithType: XUi
        qualifiedName: XUi
    isDefinition: true
    commentId: N:XUi
  System.Windows.WindowStyle.ThreeDBorderWindow:
    commentId: F:System.Windows.WindowStyle.ThreeDBorderWindow
  System.Windows.Window:
    name:
      CSharp:
      - id: System.Windows.Window
        name: Window
        nameWithType: Window
        qualifiedName: System.Windows.Window
        isExternal: true
      VB:
      - id: System.Windows.Window
        name: Window
        nameWithType: Window
        qualifiedName: System.Windows.Window
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.Window
  System.Windows.Controls:
    name:
      CSharp:
      - name: System.Windows.Controls
        nameWithType: System.Windows.Controls
        qualifiedName: System.Windows.Controls
        isExternal: true
      VB:
      - name: System.Windows.Controls
        nameWithType: System.Windows.Controls
        qualifiedName: System.Windows.Controls
    isDefinition: true
    commentId: N:System.Windows.Controls
  System.Windows.Controls.ContentControl:
    name:
      CSharp:
      - id: System.Windows.Controls.ContentControl
        name: ContentControl
        nameWithType: ContentControl
        qualifiedName: System.Windows.Controls.ContentControl
        isExternal: true
      VB:
      - id: System.Windows.Controls.ContentControl
        name: ContentControl
        nameWithType: ContentControl
        qualifiedName: System.Windows.Controls.ContentControl
        isExternal: true
    isDefinition: true
    parent: System.Windows.Controls
    commentId: T:System.Windows.Controls.ContentControl
  System.Windows.Controls.Control:
    name:
      CSharp:
      - id: System.Windows.Controls.Control
        name: Control
        nameWithType: Control
        qualifiedName: System.Windows.Controls.Control
        isExternal: true
      VB:
      - id: System.Windows.Controls.Control
        name: Control
        nameWithType: Control
        qualifiedName: System.Windows.Controls.Control
        isExternal: true
    isDefinition: true
    parent: System.Windows.Controls
    commentId: T:System.Windows.Controls.Control
  System.Windows.FrameworkElement:
    name:
      CSharp:
      - id: System.Windows.FrameworkElement
        name: FrameworkElement
        nameWithType: FrameworkElement
        qualifiedName: System.Windows.FrameworkElement
        isExternal: true
      VB:
      - id: System.Windows.FrameworkElement
        name: FrameworkElement
        nameWithType: FrameworkElement
        qualifiedName: System.Windows.FrameworkElement
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.FrameworkElement
  System.Windows.UIElement:
    name:
      CSharp:
      - id: System.Windows.UIElement
        name: UIElement
        nameWithType: UIElement
        qualifiedName: System.Windows.UIElement
        isExternal: true
      VB:
      - id: System.Windows.UIElement
        name: UIElement
        nameWithType: UIElement
        qualifiedName: System.Windows.UIElement
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.UIElement
  System.Windows.Media:
    name:
      CSharp:
      - name: System.Windows.Media
        nameWithType: System.Windows.Media
        qualifiedName: System.Windows.Media
        isExternal: true
      VB:
      - name: System.Windows.Media
        nameWithType: System.Windows.Media
        qualifiedName: System.Windows.Media
    isDefinition: true
    commentId: N:System.Windows.Media
  System.Windows.Media.Visual:
    name:
      CSharp:
      - id: System.Windows.Media.Visual
        name: Visual
        nameWithType: Visual
        qualifiedName: System.Windows.Media.Visual
        isExternal: true
      VB:
      - id: System.Windows.Media.Visual
        name: Visual
        nameWithType: Visual
        qualifiedName: System.Windows.Media.Visual
        isExternal: true
    isDefinition: true
    parent: System.Windows.Media
    commentId: T:System.Windows.Media.Visual
  System.Windows.DependencyObject:
    name:
      CSharp:
      - id: System.Windows.DependencyObject
        name: DependencyObject
        nameWithType: DependencyObject
        qualifiedName: System.Windows.DependencyObject
        isExternal: true
      VB:
      - id: System.Windows.DependencyObject
        name: DependencyObject
        nameWithType: DependencyObject
        qualifiedName: System.Windows.DependencyObject
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.DependencyObject
  System.Windows.Threading:
    name:
      CSharp:
      - name: System.Windows.Threading
        nameWithType: System.Windows.Threading
        qualifiedName: System.Windows.Threading
        isExternal: true
      VB:
      - name: System.Windows.Threading
        nameWithType: System.Windows.Threading
        qualifiedName: System.Windows.Threading
    isDefinition: true
    commentId: N:System.Windows.Threading
  System.Windows.Threading.DispatcherObject:
    name:
      CSharp:
      - id: System.Windows.Threading.DispatcherObject
        name: DispatcherObject
        nameWithType: DispatcherObject
        qualifiedName: System.Windows.Threading.DispatcherObject
        isExternal: true
      VB:
      - id: System.Windows.Threading.DispatcherObject
        name: DispatcherObject
        nameWithType: DispatcherObject
        qualifiedName: System.Windows.Threading.DispatcherObject
        isExternal: true
    isDefinition: true
    parent: System.Windows.Threading
    commentId: T:System.Windows.Threading.DispatcherObject
  System.ComponentModel:
    name:
      CSharp:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
        isExternal: true
      VB:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
    isDefinition: true
    commentId: N:System.ComponentModel
  System.ComponentModel.ISupportInitialize:
    name:
      CSharp:
      - id: System.ComponentModel.ISupportInitialize
        name: ISupportInitialize
        nameWithType: ISupportInitialize
        qualifiedName: System.ComponentModel.ISupportInitialize
        isExternal: true
      VB:
      - id: System.ComponentModel.ISupportInitialize
        name: ISupportInitialize
        nameWithType: ISupportInitialize
        qualifiedName: System.ComponentModel.ISupportInitialize
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel
    commentId: T:System.ComponentModel.ISupportInitialize
  XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
  XUi.Controls.Dialog:
    name:
      CSharp:
      - name: XUi.Controls.Dialog
        nameWithType: XUi.Controls.Dialog
        qualifiedName: XUi.Controls.Dialog
      VB:
      - name: XUi.Controls.Dialog
        nameWithType: XUi.Controls.Dialog
        qualifiedName: XUi.Controls.Dialog
    isDefinition: true
    commentId: N:XUi.Controls.Dialog
  XUi.Controls.Dialog.Dialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog
        name: Dialog
        nameWithType: Dialog
        qualifiedName: XUi.Controls.Dialog.Dialog
      VB:
      - id: XUi.Controls.Dialog.Dialog
        name: Dialog
        nameWithType: Dialog
        qualifiedName: XUi.Controls.Dialog.Dialog
    isDefinition: true
    parent: XUi.Controls.Dialog
    commentId: T:XUi.Controls.Dialog.Dialog
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.Dialog.IDialog):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.Dialog.IDialog)
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.Dialog.IDialog)
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowCustomDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.IDialog)
  XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowInputDialog(System.String,System.String,System.String):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(System.String,System.String,System.String)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(System.String,System.String,System.String)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,System.String,System.String,System.String)
  XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.Dialog.DialogSettings):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.Dialog.DialogSettings)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.Dialog.DialogSettings)
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowInputDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
  XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowMessageDialog(System.String,System.String):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(System.String,System.String)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(System.String,System.String)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,System.String,System.String)
  XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.Dialog.DialogSettings):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.Dialog.DialogSettings)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.Dialog.DialogSettings)
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowMessageDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings)
  XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowProgressDialog(System.String,System.Boolean):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog(System.String,System.Boolean)
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog(System.String,System.Boolean)
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowProgressDialog(XUi.Controls.XUiWindow,System.String,System.Boolean)
  XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowSelectDialog(System.String,System.String,System.Collections.IEnumerable):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(System.String,System.String,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(System.String,System.String,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,System.String,System.String,System.Collections.IEnumerable)
  ? XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
  : name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
  ? XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
  : name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.ShowSelectDialog(XUi.Controls.XUiWindow,XUi.Controls.Dialog.DialogSettings,System.Collections.IEnumerable)
  XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.CloseDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.CloseDialog(XUi.Controls.XUiWindow)
  XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
  XUi.Controls.XUiWindow.XUi.Controls.Dialog.Dialog.IsDialogOpen:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
    parent: XUi.Controls.Dialog.Dialog
    commentId: M:XUi.Controls.Dialog.Dialog.IsDialogOpen(XUi.Controls.XUiWindow)
  System.Windows.Media.SolidColorBrush:
    name:
      CSharp:
      - id: System.Windows.Media.SolidColorBrush
        name: SolidColorBrush
        nameWithType: SolidColorBrush
        qualifiedName: System.Windows.Media.SolidColorBrush
        isExternal: true
      VB:
      - id: System.Windows.Media.SolidColorBrush
        name: SolidColorBrush
        nameWithType: SolidColorBrush
        qualifiedName: System.Windows.Media.SolidColorBrush
        isExternal: true
    isDefinition: true
    parent: System.Windows.Media
    commentId: T:System.Windows.Media.SolidColorBrush
  XUi.Controls.XUiWindow.WindowBarBrush*:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindow.WindowBarBrush*
        name: WindowBarBrush
        nameWithType: XUiWindow.WindowBarBrush
        qualifiedName: XUi.Controls.XUiWindow.WindowBarBrush
      VB:
      - id: XUi.Controls.XUiWindow.WindowBarBrush*
        name: WindowBarBrush
        nameWithType: XUiWindow.WindowBarBrush
        qualifiedName: XUi.Controls.XUiWindow.WindowBarBrush
    isDefinition: true
    commentId: Overload:XUi.Controls.XUiWindow.WindowBarBrush
  System.Windows.DependencyProperty:
    name:
      CSharp:
      - id: System.Windows.DependencyProperty
        name: DependencyProperty
        nameWithType: DependencyProperty
        qualifiedName: System.Windows.DependencyProperty
        isExternal: true
      VB:
      - id: System.Windows.DependencyProperty
        name: DependencyProperty
        nameWithType: DependencyProperty
        qualifiedName: System.Windows.DependencyProperty
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.DependencyProperty
  XUi.Controls.XUiWindow.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindow.#ctor*
        name: XUiWindow
        nameWithType: XUiWindow.XUiWindow
        qualifiedName: XUi.Controls.XUiWindow.XUiWindow
      VB:
      - id: XUi.Controls.XUiWindow.#ctor*
        name: XUiWindow
        nameWithType: XUiWindow.XUiWindow
        qualifiedName: XUi.Controls.XUiWindow.XUiWindow
    isDefinition: true
    commentId: Overload:XUi.Controls.XUiWindow.#ctor
  XUi.Controls.XUiWindow:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
      VB:
      - id: XUi.Controls.XUiWindow
        name: XUiWindow
        nameWithType: XUiWindow
        qualifiedName: XUi.Controls.XUiWindow
    isDefinition: true
    parent: XUi.Controls
    commentId: T:XUi.Controls.XUiWindow
  System.Windows.WindowStyle.ToolWindow:
    commentId: F:System.Windows.WindowStyle.ToolWindow
  XUi.Controls.XUiWindowTool.WindowBarBrush*:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindowTool.WindowBarBrush*
        name: WindowBarBrush
        nameWithType: XUiWindowTool.WindowBarBrush
        qualifiedName: XUi.Controls.XUiWindowTool.WindowBarBrush
      VB:
      - id: XUi.Controls.XUiWindowTool.WindowBarBrush*
        name: WindowBarBrush
        nameWithType: XUiWindowTool.WindowBarBrush
        qualifiedName: XUi.Controls.XUiWindowTool.WindowBarBrush
    isDefinition: true
    commentId: Overload:XUi.Controls.XUiWindowTool.WindowBarBrush
  XUi.Controls.XUiWindowTool.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindowTool.#ctor*
        name: XUiWindowTool
        nameWithType: XUiWindowTool.XUiWindowTool
        qualifiedName: XUi.Controls.XUiWindowTool.XUiWindowTool
      VB:
      - id: XUi.Controls.XUiWindowTool.#ctor*
        name: XUiWindowTool
        nameWithType: XUiWindowTool.XUiWindowTool
        qualifiedName: XUi.Controls.XUiWindowTool.XUiWindowTool
    isDefinition: true
    commentId: Overload:XUi.Controls.XUiWindowTool.#ctor
  XUi.Controls.XUiWindowTool:
    name:
      CSharp:
      - id: XUi.Controls.XUiWindowTool
        name: XUiWindowTool
        nameWithType: XUiWindowTool
        qualifiedName: XUi.Controls.XUiWindowTool
      VB:
      - id: XUi.Controls.XUiWindowTool
        name: XUiWindowTool
        nameWithType: XUiWindowTool
        qualifiedName: XUi.Controls.XUiWindowTool
    isDefinition: true
    commentId: T:XUi.Controls.XUiWindowTool
  XUi.Controls:
    name:
      CSharp:
      - name: XUi.Controls
        nameWithType: XUi.Controls
        qualifiedName: XUi.Controls
      VB:
      - name: XUi.Controls
        nameWithType: XUi.Controls
        qualifiedName: XUi.Controls
    isDefinition: true
    commentId: N:XUi.Controls
  XUi.Controls.Dialog.DialogType:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogType
        name: DialogType
        nameWithType: DialogType
        qualifiedName: XUi.Controls.Dialog.DialogType
      VB:
      - id: XUi.Controls.Dialog.DialogType
        name: DialogType
        nameWithType: DialogType
        qualifiedName: XUi.Controls.Dialog.DialogType
    isDefinition: true
    parent: XUi.Controls.Dialog
    commentId: T:XUi.Controls.Dialog.DialogType
  XUi.Controls.Dialog.MessageResult:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageResult
        name: MessageResult
        nameWithType: MessageResult
        qualifiedName: XUi.Controls.Dialog.MessageResult
      VB:
      - id: XUi.Controls.Dialog.MessageResult
        name: MessageResult
        nameWithType: MessageResult
        qualifiedName: XUi.Controls.Dialog.MessageResult
    isDefinition: true
    parent: XUi.Controls.Dialog
    commentId: T:XUi.Controls.Dialog.MessageResult
  System.Windows.Controls.UserControl:
    name:
      CSharp:
      - id: System.Windows.Controls.UserControl
        name: UserControl
        nameWithType: UserControl
        qualifiedName: System.Windows.Controls.UserControl
        isExternal: true
      VB:
      - id: System.Windows.Controls.UserControl
        name: UserControl
        nameWithType: UserControl
        qualifiedName: System.Windows.Controls.UserControl
        isExternal: true
    isDefinition: true
    parent: System.Windows.Controls
    commentId: T:System.Windows.Controls.UserControl
  XUi.Controls.Dialog.CustomDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.CustomDialog
        name: CustomDialog
        nameWithType: CustomDialog
        qualifiedName: XUi.Controls.Dialog.CustomDialog
      VB:
      - id: XUi.Controls.Dialog.CustomDialog
        name: CustomDialog
        nameWithType: CustomDialog
        qualifiedName: XUi.Controls.Dialog.CustomDialog
    isDefinition: true
    commentId: T:XUi.Controls.Dialog.CustomDialog
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{XUi.Controls.Dialog.IDialog}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{XUi.Controls.Dialog.IDialog}
  XUi.Controls.Dialog.IDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
      VB:
      - id: XUi.Controls.Dialog.IDialog
        name: IDialog
        nameWithType: IDialog
        qualifiedName: XUi.Controls.Dialog.IDialog
    isDefinition: true
    parent: XUi.Controls.Dialog
    commentId: T:XUi.Controls.Dialog.IDialog
  XUi.Controls.Dialog.Dialog.ShowCustomDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog*
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowCustomDialog*
        name: ShowCustomDialog
        nameWithType: Dialog.ShowCustomDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowCustomDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.ShowCustomDialog
  XUi.Controls.Dialog.InputDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog
        name: InputDialog
        nameWithType: InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog
      VB:
      - id: XUi.Controls.Dialog.InputDialog
        name: InputDialog
        nameWithType: InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog
    isDefinition: true
    commentId: T:XUi.Controls.Dialog.InputDialog
  XUi.Controls.Dialog.DialogSettings:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
      VB:
      - id: XUi.Controls.Dialog.DialogSettings
        name: DialogSettings
        nameWithType: DialogSettings
        qualifiedName: XUi.Controls.Dialog.DialogSettings
    isDefinition: true
    parent: XUi.Controls.Dialog
    commentId: T:XUi.Controls.Dialog.DialogSettings
  XUi.Controls.Dialog.ProgressDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog
        name: ProgressDialog
        nameWithType: ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog
        name: ProgressDialog
        nameWithType: ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog
    isDefinition: true
    commentId: T:XUi.Controls.Dialog.ProgressDialog
  System.Threading.Tasks.Task{XUi.Controls.Dialog.InputDialog}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: XUi.Controls.Dialog.InputDialog
        name: InputDialog
        nameWithType: InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: XUi.Controls.Dialog.InputDialog
        name: InputDialog
        nameWithType: InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{XUi.Controls.Dialog.InputDialog}
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  XUi.Controls.Dialog.Dialog.ShowInputDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog*
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowInputDialog*
        name: ShowInputDialog
        nameWithType: Dialog.ShowInputDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowInputDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.ShowInputDialog
  XUi.Controls.Dialog.MessageDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageDialog
        name: MessageDialog
        nameWithType: MessageDialog
        qualifiedName: XUi.Controls.Dialog.MessageDialog
      VB:
      - id: XUi.Controls.Dialog.MessageDialog
        name: MessageDialog
        nameWithType: MessageDialog
        qualifiedName: XUi.Controls.Dialog.MessageDialog
    isDefinition: true
    commentId: T:XUi.Controls.Dialog.MessageDialog
  System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: XUi.Controls.Dialog.MessageResult
        name: MessageResult
        nameWithType: MessageResult
        qualifiedName: XUi.Controls.Dialog.MessageResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: XUi.Controls.Dialog.MessageResult
        name: MessageResult
        nameWithType: MessageResult
        qualifiedName: XUi.Controls.Dialog.MessageResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{XUi.Controls.Dialog.MessageResult}
  XUi.Controls.Dialog.Dialog.ShowMessageDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog*
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowMessageDialog*
        name: ShowMessageDialog
        nameWithType: Dialog.ShowMessageDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowMessageDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.ShowMessageDialog
  System.Threading.Tasks.Task{XUi.Controls.Dialog.ProgressDialog}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: XUi.Controls.Dialog.ProgressDialog
        name: ProgressDialog
        nameWithType: ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: XUi.Controls.Dialog.ProgressDialog
        name: ProgressDialog
        nameWithType: ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{XUi.Controls.Dialog.ProgressDialog}
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  XUi.Controls.Dialog.Dialog.ShowProgressDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog*
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowProgressDialog*
        name: ShowProgressDialog
        nameWithType: Dialog.ShowProgressDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowProgressDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.ShowProgressDialog
  System.Threading.Tasks.Task{System.Object}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Object}
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  XUi.Controls.Dialog.Dialog.ShowSelectDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog*
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.ShowSelectDialog*
        name: ShowSelectDialog
        nameWithType: Dialog.ShowSelectDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.ShowSelectDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.ShowSelectDialog
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  XUi.Controls.Dialog.Dialog.CloseDialog*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog*
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
      VB:
      - id: XUi.Controls.Dialog.Dialog.CloseDialog*
        name: CloseDialog
        nameWithType: Dialog.CloseDialog
        qualifiedName: XUi.Controls.Dialog.Dialog.CloseDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.CloseDialog
  XUi.Controls.Dialog.Dialog.IsDialogOpen*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen*
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
      VB:
      - id: XUi.Controls.Dialog.Dialog.IsDialogOpen*
        name: IsDialogOpen
        nameWithType: Dialog.IsDialogOpen
        qualifiedName: XUi.Controls.Dialog.Dialog.IsDialogOpen
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.Dialog.IsDialogOpen
  XUi.Controls.Dialog.DialogSettings.DefaultButton*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.DefaultButton*
        name: DefaultButton
        nameWithType: DialogSettings.DefaultButton
        qualifiedName: XUi.Controls.Dialog.DialogSettings.DefaultButton
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.DefaultButton*
        name: DefaultButton
        nameWithType: DialogSettings.DefaultButton
        qualifiedName: XUi.Controls.Dialog.DialogSettings.DefaultButton
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.DefaultButton
  XUi.Controls.Dialog.DialogSettings.YesText*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.YesText*
        name: YesText
        nameWithType: DialogSettings.YesText
        qualifiedName: XUi.Controls.Dialog.DialogSettings.YesText
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.YesText*
        name: YesText
        nameWithType: DialogSettings.YesText
        qualifiedName: XUi.Controls.Dialog.DialogSettings.YesText
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.YesText
  XUi.Controls.Dialog.DialogSettings.NoText*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.NoText*
        name: NoText
        nameWithType: DialogSettings.NoText
        qualifiedName: XUi.Controls.Dialog.DialogSettings.NoText
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.NoText*
        name: NoText
        nameWithType: DialogSettings.NoText
        qualifiedName: XUi.Controls.Dialog.DialogSettings.NoText
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.NoText
  System.Windows.HorizontalAlignment:
    name:
      CSharp:
      - id: System.Windows.HorizontalAlignment
        name: HorizontalAlignment
        nameWithType: HorizontalAlignment
        qualifiedName: System.Windows.HorizontalAlignment
        isExternal: true
      VB:
      - id: System.Windows.HorizontalAlignment
        name: HorizontalAlignment
        nameWithType: HorizontalAlignment
        qualifiedName: System.Windows.HorizontalAlignment
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.HorizontalAlignment
  XUi.Controls.Dialog.DialogSettings.ButtonAlignement*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.ButtonAlignement*
        name: ButtonAlignement
        nameWithType: DialogSettings.ButtonAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.ButtonAlignement
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.ButtonAlignement*
        name: ButtonAlignement
        nameWithType: DialogSettings.ButtonAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.ButtonAlignement
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.ButtonAlignement
  XUi.Controls.Dialog.DialogSettings.TitleAlignement*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.TitleAlignement*
        name: TitleAlignement
        nameWithType: DialogSettings.TitleAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.TitleAlignement
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.TitleAlignement*
        name: TitleAlignement
        nameWithType: DialogSettings.TitleAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.TitleAlignement
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.TitleAlignement
  XUi.Controls.Dialog.DialogSettings.MessageAlignement*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.DialogSettings.MessageAlignement*
        name: MessageAlignement
        nameWithType: DialogSettings.MessageAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.MessageAlignement
      VB:
      - id: XUi.Controls.Dialog.DialogSettings.MessageAlignement*
        name: MessageAlignement
        nameWithType: DialogSettings.MessageAlignement
        qualifiedName: XUi.Controls.Dialog.DialogSettings.MessageAlignement
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.DialogSettings.MessageAlignement
  XUi.Controls.Dialog.CustomDialog.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.CustomDialog.#ctor*
        name: CustomDialog
        nameWithType: CustomDialog.CustomDialog
        qualifiedName: XUi.Controls.Dialog.CustomDialog.CustomDialog
      VB:
      - id: XUi.Controls.Dialog.CustomDialog.#ctor*
        name: CustomDialog
        nameWithType: CustomDialog.CustomDialog
        qualifiedName: XUi.Controls.Dialog.CustomDialog.CustomDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.CustomDialog.#ctor
  System.Windows.RoutedEventArgs:
    name:
      CSharp:
      - id: System.Windows.RoutedEventArgs
        name: RoutedEventArgs
        nameWithType: RoutedEventArgs
        qualifiedName: System.Windows.RoutedEventArgs
        isExternal: true
      VB:
      - id: System.Windows.RoutedEventArgs
        name: RoutedEventArgs
        nameWithType: RoutedEventArgs
        qualifiedName: System.Windows.RoutedEventArgs
        isExternal: true
    isDefinition: true
    parent: System.Windows
    commentId: T:System.Windows.RoutedEventArgs
  XUi.Controls.Dialog.CustomDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.CustomDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: CustomDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.CustomDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.CustomDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: CustomDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.CustomDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.CustomDialog.DialogLoaded
  XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs):
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
        name: DialogLoaded
        nameWithType: IDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.IDialog.DialogLoaded
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Windows.RoutedEventArgs
        name: RoutedEventArgs
        nameWithType: RoutedEventArgs
        qualifiedName: System.Windows.RoutedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
        name: DialogLoaded
        nameWithType: IDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.IDialog.DialogLoaded
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Windows.RoutedEventArgs
        name: RoutedEventArgs
        nameWithType: RoutedEventArgs
        qualifiedName: System.Windows.RoutedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: XUi.Controls.Dialog.IDialog
    commentId: M:XUi.Controls.Dialog.IDialog.DialogLoaded(System.Object,System.Windows.RoutedEventArgs)
  XUi.Controls.Dialog.CustomDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.CustomDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: CustomDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.CustomDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.CustomDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: CustomDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.CustomDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.CustomDialog.ExitAnimation
  XUi.Controls.Dialog.IDialog.ExitAnimation:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.ExitAnimation
        name: ExitAnimation
        nameWithType: IDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.IDialog.ExitAnimation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.IDialog.ExitAnimation
        name: ExitAnimation
        nameWithType: IDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.IDialog.ExitAnimation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: XUi.Controls.Dialog.IDialog
    commentId: M:XUi.Controls.Dialog.IDialog.ExitAnimation
  XUi.Controls.Dialog.CustomDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.CustomDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: CustomDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.CustomDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.CustomDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: CustomDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.CustomDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.CustomDialog.WaitMessageResult
  XUi.Controls.Dialog.IDialog.WaitMessageResult:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.WaitMessageResult
        name: WaitMessageResult
        nameWithType: IDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.IDialog.WaitMessageResult
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: XUi.Controls.Dialog.IDialog.WaitMessageResult
        name: WaitMessageResult
        nameWithType: IDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.IDialog.WaitMessageResult
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: XUi.Controls.Dialog.IDialog
    commentId: M:XUi.Controls.Dialog.IDialog.WaitMessageResult
  XUi.Controls.Dialog.MessageDialog.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageDialog.#ctor*
        name: MessageDialog
        nameWithType: MessageDialog.MessageDialog
        qualifiedName: XUi.Controls.Dialog.MessageDialog.MessageDialog
      VB:
      - id: XUi.Controls.Dialog.MessageDialog.#ctor*
        name: MessageDialog
        nameWithType: MessageDialog.MessageDialog
        qualifiedName: XUi.Controls.Dialog.MessageDialog.MessageDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.MessageDialog.#ctor
  XUi.Controls.Dialog.MessageDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: MessageDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.MessageDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.MessageDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: MessageDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.MessageDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.MessageDialog.DialogLoaded
  XUi.Controls.Dialog.MessageDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: MessageDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.MessageDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.MessageDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: MessageDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.MessageDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.MessageDialog.ExitAnimation
  XUi.Controls.Dialog.MessageDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.MessageDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: MessageDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.MessageDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.MessageDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: MessageDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.MessageDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.MessageDialog.WaitMessageResult
  XUi.Controls.Dialog.ProgressDialog.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog.#ctor*
        name: ProgressDialog
        nameWithType: ProgressDialog.ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.ProgressDialog
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog.#ctor*
        name: ProgressDialog
        nameWithType: ProgressDialog.ProgressDialog
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.ProgressDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.ProgressDialog.#ctor
  XUi.Controls.Dialog.ProgressDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: ProgressDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: ProgressDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.ProgressDialog.DialogLoaded
  XUi.Controls.Dialog.ProgressDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: ProgressDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: ProgressDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.ProgressDialog.ExitAnimation
  XUi.Controls.Dialog.ProgressDialog.SetText*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog.SetText*
        name: SetText
        nameWithType: ProgressDialog.SetText
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.SetText
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog.SetText*
        name: SetText
        nameWithType: ProgressDialog.SetText
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.SetText
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.ProgressDialog.SetText
  XUi.Controls.Dialog.ProgressDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: ProgressDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: ProgressDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.ProgressDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.ProgressDialog.WaitMessageResult
  XUi.Controls.Dialog.SelectDialog.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.SelectDialog.#ctor*
        name: SelectDialog
        nameWithType: SelectDialog.SelectDialog
        qualifiedName: XUi.Controls.Dialog.SelectDialog.SelectDialog
      VB:
      - id: XUi.Controls.Dialog.SelectDialog.#ctor*
        name: SelectDialog
        nameWithType: SelectDialog.SelectDialog
        qualifiedName: XUi.Controls.Dialog.SelectDialog.SelectDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.SelectDialog.#ctor
  XUi.Controls.Dialog.SelectDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.SelectDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: SelectDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.SelectDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.SelectDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: SelectDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.SelectDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.SelectDialog.DialogLoaded
  XUi.Controls.Dialog.SelectDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.SelectDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: SelectDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.SelectDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.SelectDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: SelectDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.SelectDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.SelectDialog.ExitAnimation
  XUi.Controls.Dialog.SelectDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.SelectDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: SelectDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.SelectDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.SelectDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: SelectDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.SelectDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.SelectDialog.WaitMessageResult
  XUi.Controls.Dialog.SelectDialog:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.SelectDialog
        name: SelectDialog
        nameWithType: SelectDialog
        qualifiedName: XUi.Controls.Dialog.SelectDialog
      VB:
      - id: XUi.Controls.Dialog.SelectDialog
        name: SelectDialog
        nameWithType: SelectDialog
        qualifiedName: XUi.Controls.Dialog.SelectDialog
    isDefinition: true
    commentId: T:XUi.Controls.Dialog.SelectDialog
  XUi.Controls.Dialog.IDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: IDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.IDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.IDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: IDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.IDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.IDialog.WaitMessageResult
  XUi.Controls.Dialog.IDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: IDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.IDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.IDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: IDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.IDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.IDialog.ExitAnimation
  XUi.Controls.Dialog.IDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.IDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: IDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.IDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.IDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: IDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.IDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.IDialog.DialogLoaded
  XUi.Controls.Dialog.InputDialog.#ctor*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog.#ctor*
        name: InputDialog
        nameWithType: InputDialog.InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog.InputDialog
      VB:
      - id: XUi.Controls.Dialog.InputDialog.#ctor*
        name: InputDialog
        nameWithType: InputDialog.InputDialog
        qualifiedName: XUi.Controls.Dialog.InputDialog.InputDialog
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.InputDialog.#ctor
  XUi.Controls.Dialog.InputDialog.DialogLoaded*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: InputDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.InputDialog.DialogLoaded
      VB:
      - id: XUi.Controls.Dialog.InputDialog.DialogLoaded*
        name: DialogLoaded
        nameWithType: InputDialog.DialogLoaded
        qualifiedName: XUi.Controls.Dialog.InputDialog.DialogLoaded
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.InputDialog.DialogLoaded
  XUi.Controls.Dialog.InputDialog.ExitAnimation*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: InputDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.InputDialog.ExitAnimation
      VB:
      - id: XUi.Controls.Dialog.InputDialog.ExitAnimation*
        name: ExitAnimation
        nameWithType: InputDialog.ExitAnimation
        qualifiedName: XUi.Controls.Dialog.InputDialog.ExitAnimation
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.InputDialog.ExitAnimation
  XUi.Controls.Dialog.InputDialog.WaitMessageResult*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: InputDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.InputDialog.WaitMessageResult
      VB:
      - id: XUi.Controls.Dialog.InputDialog.WaitMessageResult*
        name: WaitMessageResult
        nameWithType: InputDialog.WaitMessageResult
        qualifiedName: XUi.Controls.Dialog.InputDialog.WaitMessageResult
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.InputDialog.WaitMessageResult
  XUi.Controls.Dialog.InputDialog.DataEntered*:
    name:
      CSharp:
      - id: XUi.Controls.Dialog.InputDialog.DataEntered*
        name: DataEntered
        nameWithType: InputDialog.DataEntered
        qualifiedName: XUi.Controls.Dialog.InputDialog.DataEntered
      VB:
      - id: XUi.Controls.Dialog.InputDialog.DataEntered*
        name: DataEntered
        nameWithType: InputDialog.DataEntered
        qualifiedName: XUi.Controls.Dialog.InputDialog.DataEntered
    isDefinition: true
    commentId: Overload:XUi.Controls.Dialog.InputDialog.DataEntered
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  System.Globalization:
    name:
      CSharp:
      - name: System.Globalization
        nameWithType: System.Globalization
        qualifiedName: System.Globalization
        isExternal: true
      VB:
      - name: System.Globalization
        nameWithType: System.Globalization
        qualifiedName: System.Globalization
    isDefinition: true
    commentId: N:System.Globalization
  System.Globalization.CultureInfo:
    name:
      CSharp:
      - id: System.Globalization.CultureInfo
        name: CultureInfo
        nameWithType: CultureInfo
        qualifiedName: System.Globalization.CultureInfo
        isExternal: true
      VB:
      - id: System.Globalization.CultureInfo
        name: CultureInfo
        nameWithType: CultureInfo
        qualifiedName: System.Globalization.CultureInfo
        isExternal: true
    isDefinition: true
    parent: System.Globalization
    commentId: T:System.Globalization.CultureInfo
  XUi.Converters.MathConverter.Convert*:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter.Convert*
        name: Convert
        nameWithType: MathConverter.Convert
        qualifiedName: XUi.Converters.MathConverter.Convert
      VB:
      - id: XUi.Converters.MathConverter.Convert*
        name: Convert
        nameWithType: MathConverter.Convert
        qualifiedName: XUi.Converters.MathConverter.Convert
    isDefinition: true
    commentId: Overload:XUi.Converters.MathConverter.Convert
  XUi.Converters.MathConverter.ConvertBack*:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter.ConvertBack*
        name: ConvertBack
        nameWithType: MathConverter.ConvertBack
        qualifiedName: XUi.Converters.MathConverter.ConvertBack
      VB:
      - id: XUi.Converters.MathConverter.ConvertBack*
        name: ConvertBack
        nameWithType: MathConverter.ConvertBack
        qualifiedName: XUi.Converters.MathConverter.ConvertBack
    isDefinition: true
    commentId: Overload:XUi.Converters.MathConverter.ConvertBack
  XUi.Converters.MathConverter.RessourceEval*:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter.RessourceEval*
        name: RessourceEval
        nameWithType: MathConverter.RessourceEval
        qualifiedName: XUi.Converters.MathConverter.RessourceEval
      VB:
      - id: XUi.Converters.MathConverter.RessourceEval*
        name: RessourceEval
        nameWithType: MathConverter.RessourceEval
        qualifiedName: XUi.Converters.MathConverter.RessourceEval
    isDefinition: true
    commentId: Overload:XUi.Converters.MathConverter.RessourceEval
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  XUi.Converters.MathConverter.ParenthesesEval*:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter.ParenthesesEval*
        name: ParenthesesEval
        nameWithType: MathConverter.ParenthesesEval
        qualifiedName: XUi.Converters.MathConverter.ParenthesesEval
      VB:
      - id: XUi.Converters.MathConverter.ParenthesesEval*
        name: ParenthesesEval
        nameWithType: MathConverter.ParenthesesEval
        qualifiedName: XUi.Converters.MathConverter.ParenthesesEval
    isDefinition: true
    commentId: Overload:XUi.Converters.MathConverter.ParenthesesEval
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  XUi.Converters.MathConverter.MathExpressionEval*:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter.MathExpressionEval*
        name: MathExpressionEval
        nameWithType: MathConverter.MathExpressionEval
        qualifiedName: XUi.Converters.MathConverter.MathExpressionEval
      VB:
      - id: XUi.Converters.MathConverter.MathExpressionEval*
        name: MathExpressionEval
        nameWithType: MathConverter.MathExpressionEval
        qualifiedName: XUi.Converters.MathConverter.MathExpressionEval
    isDefinition: true
    commentId: Overload:XUi.Converters.MathConverter.MathExpressionEval
  XUi.Converters.MathConverter:
    name:
      CSharp:
      - id: XUi.Converters.MathConverter
        name: MathConverter
        nameWithType: MathConverter
        qualifiedName: XUi.Converters.MathConverter
      VB:
      - id: XUi.Converters.MathConverter
        name: MathConverter
        nameWithType: MathConverter
        qualifiedName: XUi.Converters.MathConverter
    isDefinition: true
    commentId: T:XUi.Converters.MathConverter
  XUi.Converters:
    name:
      CSharp:
      - name: XUi.Converters
        nameWithType: XUi.Converters
        qualifiedName: XUi.Converters
      VB:
      - name: XUi.Converters
        nameWithType: XUi.Converters
        qualifiedName: XUi.Converters
    isDefinition: true
    commentId: N:XUi.Converters
  XUi.UI:
    name:
      CSharp:
      - name: XUi.UI
        nameWithType: XUi.UI
        qualifiedName: XUi.UI
      VB:
      - name: XUi.UI
        nameWithType: XUi.UI
        qualifiedName: XUi.UI
    isDefinition: true
    commentId: N:XUi.UI
  XUi.UI.AnimationManager.TransitionType:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager.TransitionType
        name: AnimationManager.TransitionType
        nameWithType: AnimationManager.TransitionType
        qualifiedName: XUi.UI.AnimationManager.TransitionType
      VB:
      - id: XUi.UI.AnimationManager.TransitionType
        name: AnimationManager.TransitionType
        nameWithType: AnimationManager.TransitionType
        qualifiedName: XUi.UI.AnimationManager.TransitionType
    isDefinition: true
    parent: XUi.UI
    commentId: T:XUi.UI.AnimationManager.TransitionType
  XUi.UI.AnimationManager.LoadTransitionOpen*:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager.LoadTransitionOpen*
        name: LoadTransitionOpen
        nameWithType: AnimationManager.LoadTransitionOpen
        qualifiedName: XUi.UI.AnimationManager.LoadTransitionOpen
      VB:
      - id: XUi.UI.AnimationManager.LoadTransitionOpen*
        name: LoadTransitionOpen
        nameWithType: AnimationManager.LoadTransitionOpen
        qualifiedName: XUi.UI.AnimationManager.LoadTransitionOpen
    isDefinition: true
    commentId: Overload:XUi.UI.AnimationManager.LoadTransitionOpen
  XUi.UI.AnimationManager.LoadTransitionClose*:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager.LoadTransitionClose*
        name: LoadTransitionClose
        nameWithType: AnimationManager.LoadTransitionClose
        qualifiedName: XUi.UI.AnimationManager.LoadTransitionClose
      VB:
      - id: XUi.UI.AnimationManager.LoadTransitionClose*
        name: LoadTransitionClose
        nameWithType: AnimationManager.LoadTransitionClose
        qualifiedName: XUi.UI.AnimationManager.LoadTransitionClose
    isDefinition: true
    commentId: Overload:XUi.UI.AnimationManager.LoadTransitionClose
  XUi.UI.AnimationManager.AnimationType:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager.AnimationType
        name: AnimationManager.AnimationType
        nameWithType: AnimationManager.AnimationType
        qualifiedName: XUi.UI.AnimationManager.AnimationType
      VB:
      - id: XUi.UI.AnimationManager.AnimationType
        name: AnimationManager.AnimationType
        nameWithType: AnimationManager.AnimationType
        qualifiedName: XUi.UI.AnimationManager.AnimationType
    isDefinition: true
    parent: XUi.UI
    commentId: T:XUi.UI.AnimationManager.AnimationType
  System.Windows.Media.Animation.Storyboard:
    commentId: T:System.Windows.Media.Animation.Storyboard
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  XUi.UI.AnimationManager.LoadAnimation*:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager.LoadAnimation*
        name: LoadAnimation
        nameWithType: AnimationManager.LoadAnimation
        qualifiedName: XUi.UI.AnimationManager.LoadAnimation
      VB:
      - id: XUi.UI.AnimationManager.LoadAnimation*
        name: LoadAnimation
        nameWithType: AnimationManager.LoadAnimation
        qualifiedName: XUi.UI.AnimationManager.LoadAnimation
    isDefinition: true
    commentId: Overload:XUi.UI.AnimationManager.LoadAnimation
  XUi.UI.AnimationManager:
    name:
      CSharp:
      - id: XUi.UI.AnimationManager
        name: AnimationManager
        nameWithType: AnimationManager
        qualifiedName: XUi.UI.AnimationManager
      VB:
      - id: XUi.UI.AnimationManager
        name: AnimationManager
        nameWithType: AnimationManager
        qualifiedName: XUi.UI.AnimationManager
    isDefinition: true
    commentId: T:XUi.UI.AnimationManager
  System.Windows.Media.Color:
    name:
      CSharp:
      - id: System.Windows.Media.Color
        name: Color
        nameWithType: Color
        qualifiedName: System.Windows.Media.Color
        isExternal: true
      VB:
      - id: System.Windows.Media.Color
        name: Color
        nameWithType: Color
        qualifiedName: System.Windows.Media.Color
        isExternal: true
    isDefinition: true
    parent: System.Windows.Media
    commentId: T:System.Windows.Media.Color
  XUi.UI.ColorManager.CreateBaseColor*:
    name:
      CSharp:
      - id: XUi.UI.ColorManager.CreateBaseColor*
        name: CreateBaseColor
        nameWithType: ColorManager.CreateBaseColor
        qualifiedName: XUi.UI.ColorManager.CreateBaseColor
      VB:
      - id: XUi.UI.ColorManager.CreateBaseColor*
        name: CreateBaseColor
        nameWithType: ColorManager.CreateBaseColor
        qualifiedName: XUi.UI.ColorManager.CreateBaseColor
    isDefinition: true
    commentId: Overload:XUi.UI.ColorManager.CreateBaseColor
  System.Byte:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Byte
  XUi.UI.ColorManager.CreateColorPalette*:
    name:
      CSharp:
      - id: XUi.UI.ColorManager.CreateColorPalette*
        name: CreateColorPalette
        nameWithType: ColorManager.CreateColorPalette
        qualifiedName: XUi.UI.ColorManager.CreateColorPalette
      VB:
      - id: XUi.UI.ColorManager.CreateColorPalette*
        name: CreateColorPalette
        nameWithType: ColorManager.CreateColorPalette
        qualifiedName: XUi.UI.ColorManager.CreateColorPalette
    isDefinition: true
    commentId: Overload:XUi.UI.ColorManager.CreateColorPalette
  XUi.UI.ColorManager:
    name:
      CSharp:
      - id: XUi.UI.ColorManager
        name: ColorManager
        nameWithType: ColorManager
        qualifiedName: XUi.UI.ColorManager
      VB:
      - id: XUi.UI.ColorManager
        name: ColorManager
        nameWithType: ColorManager
        qualifiedName: XUi.UI.ColorManager
    isDefinition: true
    commentId: T:XUi.UI.ColorManager
