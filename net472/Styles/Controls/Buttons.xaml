<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XUi"
                    xmlns:converters="clr-namespace:XUi.Converters">

    <converters:MathConverter x:Key="MathConverter"/>

    <!-- Button Base -->

    <Style x:Key="XUi_ButtonBase" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="16 4 16 4"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <!-- Primary buttons type -->

    <Style x:Key="XUi_ButtonFlat" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{DynamicResource CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatPressBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatScrollOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonAccent" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{DynamicResource CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MidBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonImage" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource FontColor}" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource FontColor}" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonClose" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonImage}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#EB2F2F"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#7C0000"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonImageBounce" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>

                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.15" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.15" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.15" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.15" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Bounce Buttons -->

    <Style x:Key="XUi_ButtonBounceFlat" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{DynamicResource CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>


                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatPressBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatScrollOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonBounceAccent" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{DynamicResource CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>

                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MidBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded buttons type -->

    <Style x:Key="XUi_ButtonRoundedFlat" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{Binding ElementName=Border, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>


                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatPressBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatScrollOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonRoundedBounceFlat" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{Binding ElementName=Border, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>


                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatPressBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatScrollOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonRoundedAccent" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{Binding ElementName=Border, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>


                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MidBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XUi_ButtonRoundedBounceAccent" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource XUi_ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" 
                            CornerRadius="{Binding ElementName=Border, Path=ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>

                        <Border.RenderTransform>
                            <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0.25"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                     To="1.05" Duration="0:0:0"/>

                                    <DoubleAnimation Storyboard.TargetName="Scale"
                                                     Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                     To="1.05" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MidBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>