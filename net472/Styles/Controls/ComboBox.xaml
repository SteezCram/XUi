<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XUi">

    <!-- Flat theme -->

    <Style x:Key="XUi_ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <ToggleButton Name="ToggleButton" 
                                      Template="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="2" 
                                      Focusable="False"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>

                        <TextBox Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3"
                                 Padding="3"
                                 Focusable="True" 
                                 Background="{TemplateBinding Background}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"            
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  Margin="10"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border Name="DropDownBorder" Background="{TemplateBinding Background}"
                                        CornerRadius="{DynamicResource CornerRadiusBottom}"/>

                                <Border Name="MaskBorder" Background="{TemplateBinding Background}"
                                        CornerRadius="{DynamicResource CornerRadiusBottom}"/>

                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ScrollViewer.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=MaskBorder}"/>
                                    </ScrollViewer.OpacityMask>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MaxHeight" Value="0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XUi_ComboBoxLight" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource FlatPressBrush}"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <ToggleButton Name="ToggleButton" 
                                      Template="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="2" 
                                      Focusable="False"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>

                        <TextBox Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3"
                                 Padding="3"
                                 Focusable="True" 
                                 Background="{TemplateBinding Background}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"            
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  Margin="10"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border Name="DropDownBorder" Background="{TemplateBinding Background}"
                                        CornerRadius="{DynamicResource CornerRadiusBottom}"/>

                                <Border Name="MaskBorder" Background="{TemplateBinding Background}"
                                        CornerRadius="{DynamicResource CornerRadiusBottom}"/>

                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ScrollViewer.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=MaskBorder}"/>
                                    </ScrollViewer.OpacityMask>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MaxHeight" Value="0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Base style for the combo box -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="Border" 
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{DynamicResource CornerRadius}"/>

            <Border Grid.Column="0"
                    Margin="1" 
                    Background="{TemplateBinding Background}"
                    CornerRadius="{DynamicResource CornerRadius}"/>

            <Path x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource FontBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  RenderTransformOrigin="0.5,0.5">

                <Path.RenderTransform>
                    <RotateTransform x:Name="ArrowTransform" Angle="0"/>
                </Path.RenderTransform>
            </Path>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Border" Property="CornerRadius" Value="{DynamicResource CornerRadiusTop}"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0"/>

                                <EasingDoubleKeyFrame Value="180" KeyTime="0:0:0.25">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowTransform" Storyboard.TargetProperty="(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame Value="180" KeyTime="0"/>

                                <EasingDoubleKeyFrame Value="360" KeyTime="0:0:0.25">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False"/>
    </ControlTemplate>

    <Style x:Key="PopupStyle" TargetType="{x:Type Popup}">
        <Style.Triggers>
            <Trigger Property="IsOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0"/>

                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.25">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource FlatOverBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="3"
                            Background="Transparent"
                            SnapsToDevicePixels="True">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource BaseColor}" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="Transparent" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource DarkColor}" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>